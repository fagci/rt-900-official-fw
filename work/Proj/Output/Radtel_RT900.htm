<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Output\Radtel_RT900.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Output\Radtel_RT900.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Wed Mar 05 09:03:42 2025
<BR><P>
<H3>Maximum Stack Usage =       4456 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; AppRunTask &rArr; KeyProcess_Search &rArr; FastEnterChMemMenu &rArr; Menu_EnterNextLevel &rArr; Menu_SaveSelectItem &rArr; EnterResetMode &rArr; App_10msTask &rArr; PTT_ScanTask &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[12]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">ADC1_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ADC1_COMP_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[24]">ALU_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[f]">DMA1_Channel1_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[10]">DMA1_Channel2_3_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[11]">DMA1_Channel4_5_IRQHandler</a> from bt32f0x_it.o(i.DMA1_Channel4_5_IRQHandler) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from bt32f0x_it.o(i.HardFault_Handler) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[1e]">I2C2_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from bt32f0x_it.o(i.NMI_Handler) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from bt32f0x_it.o(i.PendSV_Handler) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[1f]">SPI1_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[20]">SPI2_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from bt32f0x_it.o(i.SVC_Handler) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from bt32f0x_it.o(i.SysTick_Handler) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[26]">SystemInit</a> from system_bt32f0x.o(i.SystemInit) referenced from startup_bt32f0x.o(.text)
 <LI><a href="#[19]">TIM14_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[1a]">TIM15_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[1b]">TIM16_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[1c]">TIM17_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[13]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[14]">TIM1_CC_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[15]">TIM2_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[16]">TIM3_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[17]">TIM6_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[18]">TIM7_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[e]">TS_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[21]">USART1_IRQHandler</a> from bt32f0x_it.o(i.USART1_IRQHandler) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[22]">USART2_IRQHandler</a> from bt32f0x_it.o(i.USART2_IRQHandler) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[23]">USART3_6IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_bt32f0x.o(.text) referenced from startup_bt32f0x.o(RESET)
 <LI><a href="#[27]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_bt32f0x.o(.text)
 <LI><a href="#[28]">_sputc</a> from printf8.o(i._sputc) referenced from printf8.o(i.__0sprintf$8)
 <LI><a href="#[25]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(.text)
</UL>
<P><STRONG><a name="[239]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[29]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[37]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[23a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[23b]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[23c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[23d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[23e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>ALU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USART3_6IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_bt32f0x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[23f]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqUp
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqDown
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_ReverseSwitch
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualModeFastSwitch
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChDisModeFastSwitch
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayFreq
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayChanNum
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekActiveFmChUp
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetToneFreq
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetPA
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckProgromMode
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherDisplayFreq
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigRxMode
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherChannelUp
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryCheckTask
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqModeDisplayStepMsg
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqModeDisplayDCSData
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QTScanDisplayHome
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QTScanDisplay
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRemoteScanQT
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekActiveChannel_Up
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRadioFunData
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreqInRange
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveSelectItem
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LongIntoI2C
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SQLSetup
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetTxPAPara
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_BandInitial
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTCSS_WithRfic
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreqInTxFreqRange
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCanTxOverRange
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset21Chans
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemString
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCtcssDisBuf
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputVfoScan
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputOffect
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputChFreq
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRssiValue
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCurFreq
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectPinYin
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectHZ
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectBD
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySelectPy
</UL>

<P><STRONG><a name="[35]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[a3]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendCodeOn
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveVfoData
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveRadioImfosData
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputDtmf
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryInitLevel
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetVfoModeData
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRadioFunData
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ModifyChannelData
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChMemory
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveSelectItem
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadRadioImfosData
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadVfoData
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromWriteReadData
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleProgromCmd
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset21Chans
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranStrToMiddle
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillChannelName2Buf
</UL>

<P><STRONG><a name="[1f9]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChMemory
</UL>

<P><STRONG><a name="[240]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputVfoFreq
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayInputFreq
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayInputChNum
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputDtmf
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDtmfEditCode
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqModeDisplayStepMsg
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqModeDisplayDCSData
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QTScanDisplayStatus
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QTScanDisplay
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRadioFunData
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveSelectItem
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromWriteReadData
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemString
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputVfoScan
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputOffect
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputChFreq
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranStrToMiddle
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillChannelName2Buf
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySelectPy
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[241]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[242]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromInit
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelCheckActiveAll
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryInitLevel
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterResetMode
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrowInputWindow
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPyIndex
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearInputBuffer
</UL>

<P><STRONG><a name="[7a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveRadioImfosData
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveChannelData
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_DisplayPowerOn
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelCheckActiveAll
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChMemory
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadRadioImfosData
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset21Chans
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMenuDisplay
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNum6X9
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNum12x17
</UL>

<P><STRONG><a name="[243]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[fe]"></a>strncpy</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputVfoScan
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputOffect
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputChFreq
</UL>

<P><STRONG><a name="[149]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranStrToMiddle
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillChannelName2Buf
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchPyIndex
</UL>

<P><STRONG><a name="[dd]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveVfoData
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveRadioImfosData
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveChannelData
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckLinkHead
</UL>

<P><STRONG><a name="[222]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMenuDisplay
</UL>

<P><STRONG><a name="[10a]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchPyIndex
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySelectPy
</UL>

<P><STRONG><a name="[244]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[245]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[1fe]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchPyIndex
</UL>

<P><STRONG><a name="[246]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[247]"></a>_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumTypeIn
</UL>

<P><STRONG><a name="[31]"></a>atol</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmFreqTypeIn
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmChNumTypeIn
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanRangeTypeIn
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreqTypeIn
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChanlFreqTypeIn
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[30]"></a>strtol</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[2a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[248]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[249]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[24a]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[24b]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[24c]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[225]"></a>ADC_ChannelConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bt32f0x_adc.o(i.ADC_ChannelConfig))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_Init
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_GetValOfVox
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_GetValOfBatt
</UL>

<P><STRONG><a name="[228]"></a>ADC_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt32f0x_adc.o(i.ADC_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_GetValOfVox
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_GetValOfBatt
</UL>

<P><STRONG><a name="[229]"></a>ADC_GetConversionValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bt32f0x_adc.o(i.ADC_GetConversionValue))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_GetValOfVox
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_GetValOfBatt
</UL>

<P><STRONG><a name="[1fd]"></a>Asc7B_To_Bcd4B</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, displayinputbox.o(i.Asc7B_To_Bcd4B))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchPyIndex
</UL>

<P><STRONG><a name="[1d4]"></a>ClearDisANIFlag</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, appdtmf.o(i.ClearDisANIFlag))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
</UL>

<P><STRONG><a name="[36]"></a>_strtoul</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[22e]"></a>ADC_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bt32f0x_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_Init
</UL>

<P><STRONG><a name="[39]"></a>ADC_DeInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bt32f0x_adc.o(i.ADC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_Init
</UL>

<P><STRONG><a name="[22d]"></a>ADC_GetCalibrationFactor</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, bt32f0x_adc.o(i.ADC_GetCalibrationFactor))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_Init
</UL>

<P><STRONG><a name="[227]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bt32f0x_adc.o(i.ADC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_Init
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_GetValOfVox
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_GetValOfBatt
</UL>

<P><STRONG><a name="[22c]"></a>ADC_Init</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, bt32f0x_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_Init
</UL>

<P><STRONG><a name="[226]"></a>ADC_StartOfConversion</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bt32f0x_adc.o(i.ADC_StartOfConversion))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_Init
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_GetValOfVox
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_GetValOfBatt
</UL>

<P><STRONG><a name="[22b]"></a>ADC_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bt32f0x_adc.o(i.ADC_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_Init
</UL>

<P><STRONG><a name="[3b]"></a>AlarmFuncSwitch</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, appalarm.o(i.AlarmFuncSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 4328<LI>Call Chain = AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_Off
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxEnd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitAllFunction
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmOut
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LightSwitch
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedTxSwitch
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedRxSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PTT_ScanTask
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
</UL>

<P><STRONG><a name="[40]"></a>AlarmOut</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, appalarm.o(i.AlarmOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = AlarmOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_On
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_Off
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetToneFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAlarmCode
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmTask
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
</UL>

<P><STRONG><a name="[4b]"></a>AlarmTask</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, appalarm.o(i.AlarmTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 4328<LI>Call Chain = AlarmTask &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetToneFreq
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetPA
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimeKeyLockAndPowerSave
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxRoger
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmOut
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_PowerSet
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LightSwitch
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedTxSwitch
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedRxSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>App_100msTask</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, apptask.o(i.App_100msTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 4344<LI>Call Chain = App_100msTask &rArr; VoxCheckTask &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LightFlashTask
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOff
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoxCheckTask
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckAutoKeyLockTask
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRemoteScanQT
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckExitMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterResetMode
</UL>

<P><STRONG><a name="[58]"></a>App_10msTask</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, apptask.o(i.App_10msTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 4344<LI>Call Chain = App_10msTask &rArr; PTT_ScanTask &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmTaskFunc
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Task
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PTT_ScanTask
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_ScanTask
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterResetMode
</UL>

<P><STRONG><a name="[9d]"></a>Audio_CheckBusy</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, voicebroadcast.o(i.Audio_CheckBusy))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyUpFun
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyDownFun
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoxCheckTask
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PTT_ScanTask
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryCheckTask
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[11]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bt32f0x_it.o(i.DMA1_Channel4_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DMA1_Channel4_5_IRQHandler &rArr; DMA1Int_Handler &rArr; VoiceOutput_Interrupt &rArr; DmaUpdateMemery
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1Int_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>AppRunTask</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, apptask.o(i.AppRunTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 4456<LI>Call Chain = AppRunTask &rArr; KeyProcess_Search &rArr; FastEnterChMemMenu &rArr; Menu_EnterNextLevel &rArr; Menu_SaveSelectItem &rArr; EnterResetMode &rArr; App_10msTask &rArr; PTT_ScanTask &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sidekey_GetRemapEvent
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_TxKeyTone
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_GetRealEvent
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Weather
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_DtmfInput
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterProgromMode
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFlashProgromMode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfReceiveTask
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Search
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_ScanQt
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Scan
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Moni
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayTask
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>App_500msTask</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, apptask.o(i.App_500msTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = App_500msTask &rArr; BatteryCheckTask &rArr; DisplayBattaryFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSjTimeout
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSqlLevel
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryCheckTask
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterResetMode
</UL>

<P><STRONG><a name="[74]"></a>App_50msTask</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, apptask.o(i.App_50msTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = App_50msTask &rArr; ScanTask &rArr; ScanNextChannel &rArr; VfoFreqUp &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CheckBackLight
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanTask
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyTask
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanTask
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>AudioHard_Init</STRONG> (Thumb, 260 bytes, Stack size 104 bytes, voicebroadcast.o(i.AudioHard_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = AudioHard_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMAConfig
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMACmd
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[8d]"></a>Audio_Decoder</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, voicebroadcast.o(i.Audio_Decoder))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Audio_Decoder
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStart
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayContinue
</UL>

<P><STRONG><a name="[89]"></a>Audio_PlayChanNum</STRONG> (Thumb, 368 bytes, Stack size 24 bytes, voicebroadcast.o(i.Audio_PlayChanNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Audio_PlayChanNum &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmFreqTypeIn
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmChNumTypeIn
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumChangeRead
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanRangeTypeIn
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_KeyDigitalInput
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreqTypeIn
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChanlFreqTypeIn
</UL>

<P><STRONG><a name="[8b]"></a>Audio_PlayContinue</STRONG> (Thumb, 134 bytes, Stack size 536 bytes, voicebroadcast.o(i.Audio_PlayContinue))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = Audio_PlayContinue &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Decoder
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeSigned2unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayTask
</UL>

<P><STRONG><a name="[cc]"></a>Audio_PlayNumInQueue</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, voicebroadcast.o(i.Audio_PlayNumInQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Audio_PlayNumInQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqTypeIn
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumTypeIn
</UL>

<P><STRONG><a name="[8f]"></a>Audio_PlayStart</STRONG> (Thumb, 242 bytes, Stack size 536 bytes, voicebroadcast.o(i.Audio_PlayStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = Audio_PlayStart &rArr; Rfic_RxTxOnOffSetup &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Decoder
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DmaUpdateMemery
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeSigned2unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayTask
</UL>

<P><STRONG><a name="[93]"></a>Audio_PlayStop</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, voicebroadcast.o(i.Audio_PlayStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Audio_PlayStop
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayVoice
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PTT_ScanTask
</UL>

<P><STRONG><a name="[6c]"></a>Audio_PlayTask</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, voicebroadcast.o(i.Audio_PlayTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = Audio_PlayTask &rArr; Audio_PlayStart &rArr; Rfic_RxTxOnOffSetup &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStart
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayContinue
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayVoiceLock
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterResetMode
</UL>

<P><STRONG><a name="[94]"></a>Audio_PlayVoice</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, voicebroadcast.o(i.Audio_PlayVoice))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Audio_PlayVoice &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStop
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_SwitchChannelOrVfo
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyLockFunSwitch
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmSwitchChVfo
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmChNumTypeIn
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayVoiceLock
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckAutoKeyLockTask
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryCheckTask
</UL>

<P><STRONG><a name="[95]"></a>Audio_PlayVoiceLock</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, voicebroadcast.o(i.Audio_PlayVoiceLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = Audio_PlayVoiceLock &rArr; Audio_PlayTask &rArr; Audio_PlayStart &rArr; Rfic_RxTxOnOffSetup &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayVoice
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayTask
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepPowerOn
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TotTimeWarning
</UL>

<P><STRONG><a name="[96]"></a>BackSpace</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, displayinputbox.o(i.BackSpace))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = BackSpace &rArr; DisplaySelectPy &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMenuExitTime
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInputDisMode
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchPyIndex
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySelectPy
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPyIndex
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSpaceChar
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
</UL>

<P><STRONG><a name="[9a]"></a>BackSpaceChar</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, displayinputbox.o(i.BackSpaceChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BackSpaceChar
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMenuExitTime
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSpace
</UL>

<P><STRONG><a name="[71]"></a>BatteryCheckTask</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, battery.o(i.BatteryCheckTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = BatteryCheckTask &rArr; DisplayBattaryFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_CheckBusy
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayVoice
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimeKeyLockAndPowerSave
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBattaryFlag
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryLowFlash
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryGetLevel
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_500msTask
</UL>

<P><STRONG><a name="[9e]"></a>BatteryGetLevel</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, battery.o(i.BatteryGetLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BatteryGetLevel &rArr; UserADC_GetValOfBatt
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_GetValOfBatt
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryInitLevel
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryCheckTask
</UL>

<P><STRONG><a name="[a2]"></a>BatteryInitLevel</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, battery.o(i.BatteryInitLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BatteryInitLevel &rArr; BatteryGetLevel &rArr; UserADC_GetValOfBatt
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryGetLevel
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>BatteryLowFlash</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, battery.o(i.BatteryLowFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = BatteryLowFlash &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayIcon
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearArea
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryCheckTask
</UL>

<P><STRONG><a name="[44]"></a>BeepOut</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, beep.o(i.BeepOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_On
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_Off
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetToneFreq
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetAfout
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqTypeIn
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanStart
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_ReverseSwitch
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterDtmfEditMode
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualModeFastSwitch
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumTypeIn
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChDisModeFastSwitch
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyUpFun
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyDownFun
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Backspace
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayVoice
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeFmMode
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmFreqTypeIn
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmFreqSub
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmFreqAdd
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmChNumTypeIn
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFmMode
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputDtmfCode
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitDtmfEditMode
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherChannelUp
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherChannelDown
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Weather
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_DtmfInput
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_ScanTask
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryCheckTask
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Search
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_ScanQt
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Scan
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Moni
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelectMode
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanRangeTypeIn
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_PriorLevel
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_KeyDigitalInput
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterNextLevel
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreqTypeIn
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterResetMode
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DcsSwitchPolarity
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtcssTypeIn
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChanlFreqTypeIn
</UL>

<P><STRONG><a name="[a7]"></a>BeepPowerOn</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(i.BeepPowerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = BeepPowerOn &rArr; Audio_PlayVoiceLock &rArr; Audio_PlayTask &rArr; Audio_PlayStart &rArr; Rfic_RxTxOnOffSetup &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayVoiceLock
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a8]"></a>Board_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, board.o(i.Board_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Board_Init &rArr; AudioHard_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_GetValOfBatt
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e6]"></a>CRC_ValidationCalc</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, crc.o(i.CRC_ValidationCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CRC_ValidationCalc
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveVfoData
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveSystemRunData
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveRadioImfosData
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadSystemRunData
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadRadioImfosData
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadVfoData
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAck
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleProgromCmd
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRxDataOk
</UL>

<P><STRONG><a name="[b0]"></a>CTCSS_WithRfic</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, devbk4819.o(i.CTCSS_WithRfic))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CTCSS_WithRfic &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_DCS_SEND_Initial
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_DCS_RECE_Initial
</UL>

<P><STRONG><a name="[b2]"></a>CTS_DCS_RECE_Initial</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, devbk4819.o(i.CTS_DCS_RECE_Initial))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CTS_DCS_RECE_Initial &rArr; DTCSS_WithRfic &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTCSS_WithRfic
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTCSS_WithRfic
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigRxMode
</UL>

<P><STRONG><a name="[b4]"></a>CTS_DCS_SEND_Initial</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, devbk4819.o(i.CTS_DCS_SEND_Initial))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CTS_DCS_SEND_Initial &rArr; RF_SendTail &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTCSS_WithRfic
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTCSS_WithRfic
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SendTail
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigTxMode
</UL>

<P><STRONG><a name="[72]"></a>CalculateSqlLevel</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, radiotask.o(i.CalculateSqlLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CalculateSqlLevel &rArr; Rfic_GetRssiVal &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetRssiVal
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_500msTask
</UL>

<P><STRONG><a name="[230]"></a>CalculateVfoTxFreq</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, radio.o(i.CalculateVfoTxFreq))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqUp
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqTypeIn
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqDown
</UL>

<P><STRONG><a name="[b7]"></a>ChDisModeFastSwitch</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, functions.o(i.ChDisModeFastSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = ChDisModeFastSwitch &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
</UL>

<P><STRONG><a name="[1b8]"></a>ChangeCapsLow</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, displayinputbox.o(i.ChangeCapsLow))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumToChar
</UL>

<P><STRONG><a name="[b9]"></a>ChangeInputType</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, displayinputbox.o(i.ChangeInputType))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ChangeInputType &rArr; MenuShowInputChar &rArr; DisplaySelectHz &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowInputChar
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMenuExitTime
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputType
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInputDisMode
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPyIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
</UL>

<P><STRONG><a name="[219]"></a>ChangePos</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, displayinputbox.o(i.ChangePos))
<BR><BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T9Select
</UL>

<P><STRONG><a name="[8e]"></a>ChangeSigned2unsigned</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, voicebroadcast.o(i.ChangeSigned2unsigned))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ChangeSigned2unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStart
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayContinue
</UL>

<P><STRONG><a name="[bc]"></a>ChanlFreqTypeIn</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, appmenu.o(i.ChanlFreqTypeIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = ChanlFreqTypeIn &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayChanNum
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_KeyDigitalInput
</UL>

<P><STRONG><a name="[bd]"></a>ChannelCheckActiveAll</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, radio.o(i.ChannelCheckActiveAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ChannelCheckActiveAll &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListFlagSet
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekActiveChannel_Up
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreqInRange
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChannelActive
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2]"></a>ChannelDown</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, radio.o(i.ChannelDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = ChannelDown &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfClrMatchTimer
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumChangeRead
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekActiveChannel_Down
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyDownFun
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanNextChannel
</UL>

<P><STRONG><a name="[c4]"></a>ChannelNumChangeRead</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, radio.o(i.ChannelNumChangeRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = ChannelNumChangeRead &rArr; ChannleVfoDataInit &rArr; Flash_ReadVfoData &rArr; ResetVfoModeData &rArr; Flash_SaveVfoData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayChanNum
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveSystemRunData
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannleVfoDataInit
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxReset
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelUp
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumTypeIn
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelDown
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanTask
</UL>

<P><STRONG><a name="[ca]"></a>ChannelNumTypeIn</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, radio.o(i.ChannelNumTypeIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = ChannelNumTypeIn &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputChNum
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumChangeRead
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChannelActive
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayNumInQueue
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyDigitalInput
</UL>

<P><STRONG><a name="[cd]"></a>ChannelUp</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, radio.o(i.ChannelUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = ChannelUp &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfClrMatchTimer
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumChangeRead
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekActiveChannel_Up
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyUpFun
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanNextChannel
</UL>

<P><STRONG><a name="[c7]"></a>ChannleVfoDataInit</STRONG> (Thumb, 498 bytes, Stack size 40 bytes, radio.o(i.ChannleVfoDataInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ChannleVfoDataInit &rArr; Flash_ReadVfoData &rArr; ResetVfoModeData &rArr; Flash_SaveVfoData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoOffsetCalculate
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqCalculate
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCTSDCSType
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadVfoData
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_SwitchChannelOrVfo
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioVfoInfo_Init
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveQTScanResult
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumChangeRead
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRadioDcs
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRadioCtcss
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChMemory
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChDelete
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveSelectItem
</UL>

<P><STRONG><a name="[d2]"></a>CharInput</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, displayinputbox.o(i.CharInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CharInput &rArr; InsertChar
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumToChar
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPinYin
</UL>

<P><STRONG><a name="[218]"></a>CheckAlarmDelay</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, appalarm.o(i.CheckAlarmDelay))
<BR><BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>

<P><STRONG><a name="[55]"></a>CheckAutoKeyLockTask</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, functions.o(i.CheckAutoKeyLockTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = CheckAutoKeyLockTask &rArr; DisplayLockFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayVoice
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_100msTask
</UL>

<P><STRONG><a name="[1d5]"></a>CheckBatteryCanTx</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, battery.o(i.CheckBatteryCanTx))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
</UL>

<P><STRONG><a name="[d5]"></a>CheckCanTxOverRange</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, radiotask.o(i.CheckCanTxOverRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CheckCanTxOverRange &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreqInTxFreqRange
</UL>

<P><STRONG><a name="[c0]"></a>CheckChannelActive</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, radio.o(i.CheckChannelActive))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumTypeIn
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelCheckActiveAll
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekActiveChannel_Up
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChMemory
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChDelete
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekActiveChannel_Down
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemString
</UL>

<P><STRONG><a name="[53]"></a>CheckExitMenu</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, appmenu.o(i.CheckExitMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 4280<LI>Call Chain = CheckExitMenu &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ExitMode
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeFmMode
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_100msTask
</UL>

<P><STRONG><a name="[15a]"></a>CheckFmChActive</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, appfm.o(i.CheckFmChActive))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekActiveFmChUp
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekActiveFmChDown
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmCheckChannelActive
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemString
</UL>

<P><STRONG><a name="[be]"></a>CheckFreqInRange</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, radio.o(i.CheckFreqInRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CheckFreqInRange &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqTypeIn
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_ReverseSwitch
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelCheckActiveAll
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqCalculate
</UL>

<P><STRONG><a name="[d8]"></a>CheckFreqInTxFreqRange</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, radiotask.o(i.CheckFreqInTxFreqRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CheckFreqInTxFreqRange &rArr; CheckCanTxOverRange &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHardWorkBand
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCanTxOverRange
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
</UL>

<P><STRONG><a name="[1fc]"></a>CheckIsStandardCTCSS</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, appsearch.o(i.CheckIsStandardCTCSS))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CheckIsStandardCTCSS
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRemoteScanQT
</UL>

<P><STRONG><a name="[da]"></a>CheckIsStandardDCS</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, appsearch.o(i.CheckIsStandardDCS))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CheckIsStandardDCS &rArr; GOLAY_ENCODE
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOLAY_ENCODE
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRemoteScanQT
</UL>

<P><STRONG><a name="[dc]"></a>CheckLinkHead</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, progromflash.o(i.CheckLinkHead))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CheckLinkHead &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterProgromMode
</UL>

<P><STRONG><a name="[11a]"></a>CheckPowerBusy</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, battery.o(i.CheckPowerBusy))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyTask
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[54]"></a>CheckPowerOff</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, boardfun.o(i.CheckPowerOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 4272<LI>Call Chain = CheckPowerOff &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_Sleep
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfOff
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveVfoData
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveSystemRunData
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveRadioImfosData
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveChannelData
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFlashProgromMode
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_100msTask
</UL>

<P><STRONG><a name="[e3]"></a>CheckProgromMode</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, progromflash.o(i.CheckProgromMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CheckProgromMode &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Handler
</UL>

<P><STRONG><a name="[128]"></a>CheckProgromTimeout</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, progromflash.o(i.CheckProgromTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterProgromMode
</UL>

<P><STRONG><a name="[e4]"></a>CheckRxDataOk</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, progromflash.o(i.CheckRxDataOk))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CheckRxDataOk &rArr; StatusAck &rArr; CRC_ValidationCalc
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_ValidationCalc
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAck
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFlashProgromMode
</UL>

<P><STRONG><a name="[73]"></a>CheckSjTimeout</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, displayinputbox.o(i.CheckSjTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_500msTask
</UL>

<P><STRONG><a name="[e7]"></a>ChkFirstInput</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, displayinputbox.o(i.ChkFirstInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ChkFirstInput &rArr; ClearPyIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPyIndex
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearInputBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumToChar
</UL>

<P><STRONG><a name="[e8]"></a>ClearInputBuffer</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, displayinputbox.o(i.ClearInputBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClearInputBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkFirstInput
</UL>

<P><STRONG><a name="[9b]"></a>ClearPyIndex</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, displayinputbox.o(i.ClearPyIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClearPyIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelectMode
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeInputType
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSpace
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkFirstInput
</UL>

<P><STRONG><a name="[e9]"></a>CtcssTypeIn</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, appmenu.o(i.CtcssTypeIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = CtcssTypeIn &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_KeyDigitalInput
</UL>

<P><STRONG><a name="[5d]"></a>DMA1Int_Handler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, board.o(i.DMA1Int_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DMA1Int_Handler &rArr; VoiceOutput_Interrupt &rArr; DmaUpdateMemery
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOutput_Interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
</UL>

<P><STRONG><a name="[90]"></a>DMA_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bt32f0x_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1Int_Handler
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStop
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStart
</UL>

<P><STRONG><a name="[80]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bt32f0x_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOutput_Interrupt
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStop
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DmaUpdateMemery
</UL>

<P><STRONG><a name="[7d]"></a>DMA_DeInit</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, bt32f0x_dma.o(i.DMA_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
</UL>

<P><STRONG><a name="[ea]"></a>DMA_GetITStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bt32f0x_dma.o(i.DMA_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1Int_Handler
</UL>

<P><STRONG><a name="[7f]"></a>DMA_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bt32f0x_dma.o(i.DMA_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStop
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStart
</UL>

<P><STRONG><a name="[7e]"></a>DMA_Init</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, bt32f0x_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
</UL>

<P><STRONG><a name="[b3]"></a>DTCSS_WithRfic</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, devbk4819.o(i.DTCSS_WithRfic))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DTCSS_WithRfic &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOLAY_ENCODE
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_DCS_SEND_Initial
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_DCS_RECE_Initial
</UL>

<P><STRONG><a name="[ec]"></a>DcsSwitchPolarity</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, appmenu.o(i.DcsSwitchPolarity))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = DcsSwitchPolarity &rArr; Menu_Display &rArr; UpdateMenuDisplay &rArr; DisplayStateBar &rArr; DisplayBattaryFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMenuExitTime
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
</UL>

<P><STRONG><a name="[92]"></a>DelayMs</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, delay.o(i.DelayMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxRoger
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOff
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTxOver
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_DisplayPowerOn
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayTask
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterResetMode
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitPttRelease
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseChip
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Erase64kBlock
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStart
</UL>

<P><STRONG><a name="[ee]"></a>DelayUs</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, delay.o(i.DelayUs))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadWord
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ByteWrite
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseChip
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Erase64kBlock
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Erase32kBlock
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBuffer
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyCode
</UL>

<P><STRONG><a name="[9f]"></a>DisplayBattaryFlag</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, battery.o(i.DisplayBattaryFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DisplayBattaryFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayIcon
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryCheckTask
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayStateBar
</UL>

<P><STRONG><a name="[21d]"></a>DisplayBatteryVol</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, displaybattery.o(i.DisplayBatteryVol))
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_DisplayPowerOn
</UL>

<P><STRONG><a name="[ef]"></a>DisplayChannelMsg</STRONG> (Thumb, 338 bytes, Stack size 88 bytes, displaymain.o(i.DisplayChannelMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayIcon
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearArea
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayText
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNum12x17
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkBackColour
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillChannelName2Buf
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUpdateChFlag
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCurFreq
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTxMode
</UL>

<P><STRONG><a name="[f7]"></a>DisplayChannelNum</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, displaymain.o(i.DisplayChannelNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = DisplayChannelNum &rArr; LCD_DisplayNum6X9 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearArea
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayText5X7
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNum6X9
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkBackColour
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanNextChannel
</UL>

<P><STRONG><a name="[f3]"></a>DisplayCurFreq</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, displaymain.o(i.DisplayCurFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNum6X9
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNum12x17
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelMsg
</UL>

<P><STRONG><a name="[11d]"></a>DisplayDtmfEditHome</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, displaydtmf.o(i.DisplayDtmfEditHome))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterDtmfEditMode
</UL>

<P><STRONG><a name="[fa]"></a>DisplayDualRxFlag</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, displaymain.o(i.DisplayDualRxFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DisplayDualRxFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayIcon
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayStateBar
</UL>

<P><STRONG><a name="[c5]"></a>DisplayHomePage</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, displaymain.o(i.DisplayHomePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DrawHorizonLine
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayStateBar
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_ReverseSwitch
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualModeFastSwitch
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelUp
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumTypeIn
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelDown
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ExitMode
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitFmMode
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitDtmfEditMode
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioVfoInfo_Init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSearchFreqMode
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxEnd
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitMoniMode
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxTask
</UL>

<P><STRONG><a name="[fd]"></a>DisplayInputChFreq</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, displaymenu.o(i.DisplayInputChFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DisplayInputChFreq &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
</UL>

<P><STRONG><a name="[cb]"></a>DisplayInputChNum</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, displaymain.o(i.DisplayInputChNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = DisplayInputChNum &rArr; LCD_DisplayNum6X9 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNum6X9
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumTypeIn
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Backspace
</UL>

<P><STRONG><a name="[ff]"></a>DisplayInputDtmf</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, displaydtmf.o(i.DisplayInputDtmf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DisplayInputDtmf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputDtmfCode
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_DtmfInput
</UL>

<P><STRONG><a name="[100]"></a>DisplayInputOffect</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, displaymenu.o(i.DisplayInputOffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DisplayInputOffect &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
</UL>

<P><STRONG><a name="[bb]"></a>DisplayInputType</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, displaymenu.o(i.DisplayInputType))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DisplayInputType &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowInputChar
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeInputType
</UL>

<P><STRONG><a name="[101]"></a>DisplayInputVfoFreq</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, displaymain.o(i.DisplayInputVfoFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = DisplayInputVfoFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNum6X9
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNum12x17
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqTypeIn
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Backspace
</UL>

<P><STRONG><a name="[102]"></a>DisplayInputVfoScan</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, displaymenu.o(i.DisplayInputVfoScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DisplayInputVfoScan &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
</UL>

<P><STRONG><a name="[d4]"></a>DisplayLockFlag</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, displaymain.o(i.DisplayLockFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DisplayLockFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayIcon
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyLockFunSwitch
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckAutoKeyLockTask
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayStateBar
</UL>

<P><STRONG><a name="[103]"></a>DisplayMoniFlag</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, displaymain.o(i.DisplayMoniFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DisplayMoniFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayIcon
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayStateBar
</UL>

<P><STRONG><a name="[104]"></a>DisplayProgrom</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, displaymain.o(i.DisplayProgrom))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = DisplayProgrom &rArr; LCD_DisplayText &rArr; LCD_ClearArea &rArr; ST7735S_ClearArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BackLightSetOn
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayIcon
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearArea
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayText
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterProgromMode
</UL>

<P><STRONG><a name="[42]"></a>DisplayRadioHome</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, displaymain.o(i.DisplayRadioHome))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearArea
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelNum
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DrawHorizonLine
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkBackColour
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTxPowerLv
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRssiValue
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqUp
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqTypeIn
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqDown
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanStart
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanOff
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_TxPowerSWitch
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_SwitchChannelOrVfo
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_SwitchAOrB
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChDisModeFastSwitch
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Backspace
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDtmfEditCode
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitWeatherMode
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitRemoteScanQTMode
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanTask
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TotTimeWarning
</UL>

<P><STRONG><a name="[195]"></a>DisplayResetRxFlag</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, displaymain.o(i.DisplayResetRxFlag))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyUpFun
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyDownFun
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Weather
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Scan
</UL>

<P><STRONG><a name="[107]"></a>DisplayRssiValue</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, displaymain.o(i.DisplayRssiValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DisplayRssiValue &rArr; LCD_DisplayText5X7 &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearArea
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayText5X7
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkBackColour
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
</UL>

<P><STRONG><a name="[1cb]"></a>DisplayRxMode</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, displaymain.o(i.DisplayRxMode))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[108]"></a>DisplaySKeyTone</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, displaymain.o(i.DisplaySKeyTone))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DisplaySKeyTone &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayIcon
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayStateBar
</UL>

<P><STRONG><a name="[109]"></a>DisplaySelectHz</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, displaymenu.o(i.DisplaySelectHz))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DisplaySelectHz &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowInputChar
</UL>

<P><STRONG><a name="[99]"></a>DisplaySelectPy</STRONG> (Thumb, 400 bytes, Stack size 56 bytes, displayinputbox.o(i.DisplaySelectPy))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DisplaySelectPy &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T9Select
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelectMode
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSpace
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPinYin
</UL>

<P><STRONG><a name="[fb]"></a>DisplayStateBar</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, displaymain.o(i.DisplayStateBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = DisplayStateBar &rArr; DisplayBattaryFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBattaryFlag
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockFlag
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVoxFlag
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySKeyTone
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMoniFlag
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayDualRxFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMenuDisplay
</UL>

<P><STRONG><a name="[10c]"></a>DisplayTxMode</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, displaymain.o(i.DisplayTxMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = DisplayTxMode &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTxPowerLv
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
</UL>

<P><STRONG><a name="[106]"></a>DisplayTxPowerLv</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, displaymain.o(i.DisplayTxPowerLv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DisplayTxPowerLv &rArr; LCD_ClearArea &rArr; ST7735S_ClearArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearArea
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DrawVerticalLine
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DrawHorizonLine
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTxMode
</UL>

<P><STRONG><a name="[f4]"></a>DisplayUpdateChFlag</STRONG> (Thumb, 536 bytes, Stack size 40 bytes, displaymain.o(i.DisplayUpdateChFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DisplayUpdateChFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayIcon
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearArea
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkBackColour
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelMsg
</UL>

<P><STRONG><a name="[10b]"></a>DisplayVoxFlag</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, displaymain.o(i.DisplayVoxFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DisplayVoxFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayIcon
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayStateBar
</UL>

<P><STRONG><a name="[10e]"></a>DrowInputWindow</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, displayinputbox.o(i.DrowInputWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DrowInputWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInputDisMode
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowInputChar
</UL>

<P><STRONG><a name="[c6]"></a>DtmfClrMatchTimer</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, appdtmf.o(i.DtmfClrMatchTimer))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqUp
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqTypeIn
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqDown
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelUp
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelDown
</UL>

<P><STRONG><a name="[119]"></a>DtmfGetMatchStatue</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, appdtmf.o(i.DtmfGetMatchStatue))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyTask
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxEnd
</UL>

<P><STRONG><a name="[10f]"></a>DtmfInfoInit</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, appdtmf.o(i.DtmfInfoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DtmfInfoInit &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioConfig_Init
</UL>

<P><STRONG><a name="[6d]"></a>DtmfReceiveTask</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, appdtmf.o(i.DtmfReceiveTask))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
</UL>

<P><STRONG><a name="[1c4]"></a>DtmfRstMatchTimer</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, appdtmf.o(i.DtmfRstMatchTimer))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxEnd
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[110]"></a>DtmfSendCodeOn</STRONG> (Thumb, 370 bytes, Stack size 24 bytes, appdtmf.o(i.DtmfSendCodeOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = DtmfSendCodeOn &rArr; DtmfSendTask &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PTT_GetKeyVal
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTask
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAlarmCode
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxTask
</UL>

<P><STRONG><a name="[113]"></a>DtmfSendKeypadCode</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, appdtmf.o(i.DtmfSendKeypadCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = DtmfSendKeypadCode &rArr; Rfic_TxSingleTone_On &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_On
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetToneFreq
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetDtmfFreq
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_EnterDTMFMode
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetAfout
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_TxKeyTone
</UL>

<P><STRONG><a name="[112]"></a>DtmfSendTask</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, appdtmf.o(i.DtmfSendTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = DtmfSendTask &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_Off
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetDtmfFreq
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ExitDTMFMode
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_EnterDTMFMode
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetAfout
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendCodeOn
</UL>

<P><STRONG><a name="[117]"></a>DtmfSendTxOver</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, appdtmf.o(i.DtmfSendTxOver))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DtmfSendTxOver &rArr; Rfic_ExitDTMFMode &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetDtmfFreq
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ExitDTMFMode
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_EnterDTMFMode
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetAfout
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxRoger
</UL>

<P><STRONG><a name="[11b]"></a>DualChannelSwitch2Main</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, dualstandby.o(i.DualChannelSwitch2Main))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
</UL>

<P><STRONG><a name="[118]"></a>DualModeFastSwitch</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, functions.o(i.DualModeFastSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = DualModeFastSwitch &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
</UL>

<P><STRONG><a name="[77]"></a>DualStandbyTask</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, dualstandby.o(i.DualStandbyTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DualStandbyTask
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfGetMatchStatue
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerBusy
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_50msTask
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[3c]"></a>DualStandbyWorkOFF</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, dualstandby.o(i.DualStandbyWorkOFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DualStandbyWorkOFF
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualChannelSwitch2Main
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqTypeIn
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanStart
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_TxPowerSWitch
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_SwitchChannelOrVfo
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_SwitchAOrB
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_ReverseSwitch
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterMode
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterWeatherMode
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSearchFreqMode
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterMoniMode
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterDtmfEditMode
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualModeFastSwitch
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumTypeIn
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChDisModeFastSwitch
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyUpFun
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyDownFun
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Backspace
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFMMenu
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeFmMode
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmCheckTimeOut
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitFmMode
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFmMode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOff
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitDtmfEditMode
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanStart
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitWeatherMode
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitRemoteScanQTMode
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxEnd
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterRemoteScanQTMode
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastEnterChMemMenu
</UL>

<P><STRONG><a name="[1c8]"></a>DualStandbyWorkON</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dualstandby.o(i.DualStandbyWorkON))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[11c]"></a>EnterDtmfEditMode</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, appdtmf.o(i.EnterDtmfEditMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = EnterDtmfEditMode &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayDtmfEditHome
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
</UL>

<P><STRONG><a name="[11e]"></a>EnterFMMenu</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, appmenu.o(i.EnterFMMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = EnterFMMenu &rArr; Menu_Display &rArr; UpdateMenuDisplay &rArr; DisplayStateBar &rArr; DisplayBattaryFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMenuExitTime
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetFmSubItemPara
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
</UL>

<P><STRONG><a name="[6f]"></a>EnterFlashProgromMode</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, progromflash.o(i.EnterFlashProgromMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4272<LI>Call Chain = EnterFlashProgromMode &rArr; CheckPowerOff &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedTxSwitch
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedRxSwitch
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOff
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAck
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleProgromCmd
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRxDataOk
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
</UL>

<P><STRONG><a name="[122]"></a>EnterFmMode</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, appfm.o(i.EnterFmMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4280<LI>Call Chain = EnterFmMode &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_PowerOn
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ExitMode
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayHome
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
</UL>

<P><STRONG><a name="[126]"></a>EnterMoniMode</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, appmoni.o(i.EnterMoniMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4296<LI>Call Chain = EnterMoniMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_Off
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitAllFunction
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedRxSwitch
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WakeUp
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetAfout
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
</UL>

<P><STRONG><a name="[6e]"></a>EnterProgromMode</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, progromflash.o(i.EnterProgromMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = EnterProgromMode &rArr; ProgromWriteReadData &rArr; Flash_SaveRadioImfosData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfOff
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedTxSwitch
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedRxSwitch
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayProgrom
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartSendBuf
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromWriteReadData
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromSendFreqRange
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromSendAck
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckProgromTimeout
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckLinkHead
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
</UL>

<P><STRONG><a name="[12d]"></a>EnterRemoteScanQTMode</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, appscanqt.o(i.EnterRemoteScanQTMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4280<LI>Call Chain = EnterRemoteScanQTMode &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ExitMode
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QTScanDisplayHome
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
</UL>

<P><STRONG><a name="[12f]"></a>EnterResetMode</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, appmenu.o(i.EnterResetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4368<LI>Call Chain = EnterResetMode &rArr; App_10msTask &rArr; PTT_ScanTask &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ExitMode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetVfoModeData
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRadioFunData
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetChannelData
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayTask
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_500msTask
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_10msTask
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_100msTask
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveSelectItem
</UL>

<P><STRONG><a name="[134]"></a>EnterSearchFreqMode</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, appsearch.o(i.EnterSearchFreqMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4280<LI>Call Chain = EnterSearchFreqMode &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ExitMode
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_PowerSet
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedRxSwitch
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqDisplayHome
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SwitchFM_AM
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetAfout
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
</UL>

<P><STRONG><a name="[137]"></a>EnterSelectMode</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, displayinputbox.o(i.EnterSelectMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = EnterSelectMode &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowInputChar
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMenuExitTime
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInputDisMode
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertChar
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySelectPy
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPyIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPinYin
</UL>

<P><STRONG><a name="[138]"></a>EnterWeatherMode</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, appweather.o(i.EnterWeatherMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4280<LI>Call Chain = EnterWeatherMode &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ExitMode
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherDisplayHome
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
</UL>

<P><STRONG><a name="[45]"></a>ExitAllFunction</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, functions.o(i.ExitAllFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 4288<LI>Call Chain = ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ExitMode
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmEnterSleepMode
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMSwitchExit
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitWeatherMode
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSearchFreqMode
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterMoniMode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
</UL>

<P><STRONG><a name="[13e]"></a>ExitDtmfEditMode</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, appdtmf.o(i.ExitDtmfEditMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = ExitDtmfEditMode &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_DtmfInput
</UL>

<P><STRONG><a name="[13f]"></a>ExitFmMode</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, appfm.o(i.ExitFmMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = ExitFmMode &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_PowerOff
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveFmData
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmTaskFunc
</UL>

<P><STRONG><a name="[142]"></a>ExitMoniMode</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, appmoni.o(i.ExitMoniMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = ExitMoniMode &rArr; RF_RxEnd &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_PowerSet
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Moni
</UL>

<P><STRONG><a name="[144]"></a>ExitRemoteScanQTMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appscanqt.o(i.ExitRemoteScanQTMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = ExitRemoteScanQTMode &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_ScanQt
</UL>

<P><STRONG><a name="[13a]"></a>ExitSearchFreqMode</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, appsearch.o(i.ExitSearchFreqMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = ExitSearchFreqMode &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_FreqScan_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitAllFunction
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Search
</UL>

<P><STRONG><a name="[13b]"></a>ExitWeatherMode</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, appweather.o(i.ExitWeatherMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = ExitWeatherMode &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitAllFunction
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Weather
</UL>

<P><STRONG><a name="[209]"></a>FLASH_Lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bt32f0x_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[208]"></a>FLASH_SetLatency</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bt32f0x_flash.o(i.FLASH_SetLatency))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[207]"></a>FLASH_Unlock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bt32f0x_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[13d]"></a>FMSwitchExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, appfm.o(i.FMSwitchExit))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitAllFunction
</UL>

<P><STRONG><a name="[146]"></a>FastEnterChMemMenu</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, appmenu.o(i.FastEnterChMemMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 4440<LI>Call Chain = FastEnterChMemMenu &rArr; Menu_EnterNextLevel &rArr; Menu_SaveSelectItem &rArr; EnterResetMode &rArr; App_10msTask &rArr; PTT_ScanTask &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemPara
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterNextLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Search
</UL>

<P><STRONG><a name="[f6]"></a>FillChannelName2Buf</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, displaymain.o(i.FillChannelName2Buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FillChannelName2Buf &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelMsg
</UL>

<P><STRONG><a name="[212]"></a>FlashCsDelay</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, norflash.o(i.FlashCsDelay))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseSector
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseChip
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Erase64kBlock
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Erase32kBlock
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteEnable
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteByte_InPage
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadStatus
</UL>

<P><STRONG><a name="[14a]"></a>Flash_DeleteChannelData</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, radiodatastorage.o(i.Flash_DeleteChannelData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Flash_DeleteChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChDelete
</UL>

<P><STRONG><a name="[14c]"></a>Flash_GetLogicAddrShift</STRONG> (Thumb, 64 bytes, Stack size 56 bytes, radiodatastorage.o(i.Flash_GetLogicAddrShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveVfoData
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveSystemRunData
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveRadioImfosData
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadSystemRunData
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadRadioImfosData
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadVfoData
</UL>

<P><STRONG><a name="[14d]"></a>Flash_ModifyChannelData</STRONG> (Thumb, 88 bytes, Stack size 4128 bytes, radiodatastorage.o(i.Flash_ModifyChannelData))
<BR><BR>[Stack]<UL><LI>Max Depth = 4216<LI>Call Chain = Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteBytes
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseSector
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveChannelData
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChMemory
</UL>

<P><STRONG><a name="[14f]"></a>Flash_ReadDebugImfosData</STRONG> (Thumb, 550 bytes, Stack size 48 bytes, radiodatastorage.o(i.Flash_ReadDebugImfosData))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Flash_ReadDebugImfosData &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadRfMoudelType
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioConfig_Init
</UL>

<P><STRONG><a name="[1d2]"></a>Flash_ReadFmData</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, radiodatastorage.o(i.Flash_ReadFmData))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioConfig_Init
</UL>

<P><STRONG><a name="[151]"></a>Flash_ReadRadioImfosData</STRONG> (Thumb, 98 bytes, Stack size 112 bytes, radiodatastorage.o(i.Flash_ReadRadioImfosData))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = Flash_ReadRadioImfosData &rArr; ResetRadioFunData &rArr; Flash_SaveRadioImfosData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRadioFunData
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseSector
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_ValidationCalc
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GetLogicAddrShift
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioConfig_Init
</UL>

<P><STRONG><a name="[150]"></a>Flash_ReadRfMoudelType</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, radiodatastorage.o(i.Flash_ReadRfMoudelType))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadDebugImfosData
</UL>

<P><STRONG><a name="[152]"></a>Flash_ReadSystemRunData</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, radiodatastorage.o(i.Flash_ReadSystemRunData))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Flash_ReadSystemRunData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_ValidationCalc
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GetLogicAddrShift
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioConfig_Init
</UL>

<P><STRONG><a name="[ce]"></a>Flash_ReadVfoData</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, radiodatastorage.o(i.Flash_ReadVfoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Flash_ReadVfoData &rArr; ResetVfoModeData &rArr; Flash_SaveVfoData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetVfoModeData
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseSector
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_ValidationCalc
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GetLogicAddrShift
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannleVfoDataInit
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromWriteReadData
</UL>

<P><STRONG><a name="[e2]"></a>Flash_SaveChannelData</STRONG> (Thumb, 76 bytes, Stack size 48 bytes, radiodatastorage.o(i.Flash_SaveChannelData))
<BR><BR>[Stack]<UL><LI>Max Depth = 4264<LI>Call Chain = Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ModifyChannelData
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ExitMode
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOff
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveQTScanResult
</UL>

<P><STRONG><a name="[141]"></a>Flash_SaveFmData</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, radiodatastorage.o(i.Flash_SaveFmData))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeFmMode
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmSwitchChVfo
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitFmMode
</UL>

<P><STRONG><a name="[e0]"></a>Flash_SaveRadioImfosData</STRONG> (Thumb, 178 bytes, Stack size 208 bytes, radiodatastorage.o(i.Flash_SaveRadioImfosData))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Flash_SaveRadioImfosData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteBytes
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseSector
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_ValidationCalc
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GetLogicAddrShift
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ExitMode
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOff
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRadioFunData
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromWriteReadData
</UL>

<P><STRONG><a name="[1bb]"></a>Flash_SaveRfMoudelType</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, radiodatastorage.o(i.Flash_SaveRfMoudelType))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromWriteReadData
</UL>

<P><STRONG><a name="[c8]"></a>Flash_SaveSystemRunData</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, radiodatastorage.o(i.Flash_SaveSystemRunData))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Flash_SaveSystemRunData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteBytes
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseSector
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_ValidationCalc
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GetLogicAddrShift
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOff
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumChangeRead
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetChannelData
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChMemory
</UL>

<P><STRONG><a name="[e1]"></a>Flash_SaveVfoData</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, radiodatastorage.o(i.Flash_SaveVfoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Flash_SaveVfoData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteBytes
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseSector
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_ValidationCalc
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GetLogicAddrShift
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ExitMode
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOff
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveQTScanResult
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetVfoModeData
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqSave
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromWriteReadData
</UL>

<P><STRONG><a name="[153]"></a>FmAutoSeek</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, appfm.o(i.FmAutoSeek))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = FmAutoSeek &rArr; RDA5807_Seek &rArr; RDA5807_SeriesWrite &rArr; I2C_Write &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_Seek
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplaySeek
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
</UL>

<P><STRONG><a name="[1b1]"></a>FmBandConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, appfm.o(i.FmBandConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveFmSelectItem
</UL>

<P><STRONG><a name="[156]"></a>FmChNumTypeIn</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, appfm.o(i.FmChNumTypeIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = FmChNumTypeIn &rArr; Audio_PlayVoice &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayInputChNum
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayFreq
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayVoice
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayChanNum
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fm_KeyDigitalInput
</UL>

<P><STRONG><a name="[159]"></a>FmCheckChannelActive</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, appfm.o(i.FmCheckChannelActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = FmCheckChannelActive &rArr; SeekActiveFmChUp &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListFlagSet
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekActiveFmChUp
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFmChActive
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveFmSelectItem
</UL>

<P><STRONG><a name="[15c]"></a>FmCheckTimeOut</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, appfm.o(i.FmCheckTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FmCheckTimeOut &rArr; FmDisplayHome &rArr; FmDisplayFreq &rArr; FmDisplayChNum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayHome
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmTaskFunc
</UL>

<P><STRONG><a name="[15d]"></a>FmDisplayChNum</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, displayfm.o(i.FmDisplayChNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FmDisplayChNum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayFreq
</UL>

<P><STRONG><a name="[158]"></a>FmDisplayFreq</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, displayfm.o(i.FmDisplayFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FmDisplayFreq &rArr; FmDisplayChNum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayChNum
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayHome
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmTaskFunc
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmSwitchChVfo
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmFreqTypeIn
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmFreqSub
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmFreqAdd
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmChNumTypeIn
</UL>

<P><STRONG><a name="[124]"></a>FmDisplayHome</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, displayfm.o(i.FmDisplayHome))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FmDisplayHome &rArr; FmDisplayFreq &rArr; FmDisplayChNum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeFmMode
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmCheckTimeOut
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFmMode
</UL>

<P><STRONG><a name="[157]"></a>FmDisplayInputChNum</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, displayfm.o(i.FmDisplayInputChNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FmDisplayInputChNum
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmChNumTypeIn
</UL>

<P><STRONG><a name="[15e]"></a>FmDisplayInputFreq</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, displayfm.o(i.FmDisplayInputFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FmDisplayInputFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmFreqTypeIn
</UL>

<P><STRONG><a name="[155]"></a>FmDisplaySeek</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, displayfm.o(i.FmDisplaySeek))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmAutoSeek
</UL>

<P><STRONG><a name="[13c]"></a>FmEnterSleepMode</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, appfm.o(i.FmEnterSleepMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = FmEnterSleepMode &rArr; RDA5807_PowerOff &rArr; RDA5807_SeriesWrite &rArr; I2C_Write &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_PowerOff
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitAllFunction
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[15f]"></a>FmFreqAdd</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, appfm.o(i.FmFreqAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = FmFreqAdd &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayFreq
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekActiveFmChUp
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
</UL>

<P><STRONG><a name="[160]"></a>FmFreqSub</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, appfm.o(i.FmFreqSub))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = FmFreqSub &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayFreq
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekActiveFmChDown
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
</UL>

<P><STRONG><a name="[162]"></a>FmFreqTypeIn</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, appfm.o(i.FmFreqTypeIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = FmFreqTypeIn &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayInputFreq
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayFreq
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayChanNum
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fm_KeyDigitalInput
</UL>

<P><STRONG><a name="[163]"></a>FmSwitchChVfo</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, appfm.o(i.FmSwitchChVfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = FmSwitchChVfo &rArr; Audio_PlayVoice &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayFreq
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveFmData
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayVoice
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
</UL>

<P><STRONG><a name="[5c]"></a>FmTaskFunc</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, appfm.o(i.FmTaskFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = FmTaskFunc &rArr; ExitFmMode &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_Seek
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_STC
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_FrequencyToTune
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayFreq
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmCheckTimeOut
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitFmMode
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_10msTask
</UL>

<P><STRONG><a name="[166]"></a>Fm_KeyDigitalInput</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, appfm.o(i.Fm_KeyDigitalInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Fm_KeyDigitalInput &rArr; FmChNumTypeIn &rArr; Audio_PlayVoice &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmFreqTypeIn
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmChNumTypeIn
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
</UL>

<P><STRONG><a name="[167]"></a>Font_Read_12x12_CN</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, flashfont.o(i.Font_Read_12x12_CN))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Font_Read_12x12_CN &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayText
</UL>

<P><STRONG><a name="[168]"></a>Font_Read_12x17_Number</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, flashfont.o(i.Font_Read_12x17_Number))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Font_Read_12x17_Number &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNum12x17
</UL>

<P><STRONG><a name="[169]"></a>Font_Read_16x16_CN</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, flashfont.o(i.Font_Read_16x16_CN))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Font_Read_16x16_CN &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayText
</UL>

<P><STRONG><a name="[16a]"></a>Font_Read_5x7_ASCII</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flashfont.o(i.Font_Read_5x7_ASCII))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Font_Read_5x7_ASCII &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayText5X7
</UL>

<P><STRONG><a name="[16b]"></a>Font_Read_6x12_ASCII</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, flashfont.o(i.Font_Read_6x12_ASCII))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Font_Read_6x12_ASCII &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayText
</UL>

<P><STRONG><a name="[16c]"></a>Font_Read_6x9_Number</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, flashfont.o(i.Font_Read_6x9_Number))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Font_Read_6x9_Number &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNum6X9
</UL>

<P><STRONG><a name="[16d]"></a>Font_Read_8x16_ASCII</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flashfont.o(i.Font_Read_8x16_ASCII))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Font_Read_8x16_ASCII &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayText
</UL>

<P><STRONG><a name="[16e]"></a>FreqTypeIn</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, appmenu.o(i.FreqTypeIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = FreqTypeIn &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayChanNum
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_KeyDigitalInput
</UL>

<P><STRONG><a name="[db]"></a>GOLAY_ENCODE</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, devbk4819.o(i.GOLAY_ENCODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GOLAY_ENCODE
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTCSS_WithRfic
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIsStandardDCS
</UL>

<P><STRONG><a name="[82]"></a>GPIO_Init</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, bt32f0x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioModeSwitch
</UL>

<P><STRONG><a name="[81]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bt32f0x_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
</UL>

<P><STRONG><a name="[182]"></a>GPIO_ReadInputData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt32f0x_gpio.o(i.GPIO_ReadInputData))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_ReadGpioInput
</UL>

<P><STRONG><a name="[173]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt32f0x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyCode
</UL>

<P><STRONG><a name="[172]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt32f0x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyCode
</UL>

<P><STRONG><a name="[176]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt32f0x_gpio.o(i.GPIO_Write))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
</UL>

<P><STRONG><a name="[d0]"></a>GetCTSDCSType</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, radio.o(i.GetCTSDCSType))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannleVfoDataInit
</UL>

<P><STRONG><a name="[16f]"></a>GetCtcssDisBuf</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, displaymenu.o(i.GetCtcssDisBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetCtcssDisBuf &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCtcssList
</UL>

<P><STRONG><a name="[22f]"></a>GetCurWorkBand</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, radio.o(i.GetCurWorkBand))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqUp
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqDown
</UL>

<P><STRONG><a name="[170]"></a>GetDtmfEditCode</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, appdtmf.o(i.GetDtmfEditCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = GetDtmfEditCode &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
</UL>

<P><STRONG><a name="[d9]"></a>GetHardWorkBand</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, radiotask.o(i.GetHardWorkBand))
<BR><BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigRxMode
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreqInTxFreqRange
</UL>

<P><STRONG><a name="[171]"></a>GetKeyCode</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, keyboard.o(i.GetKeyCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetKeyCode &rArr; KEY_ReadGpioInput
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_ReadGpioInput
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_GetKeyEvent
</UL>

<P><STRONG><a name="[f0]"></a>GetWorkBackColour</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, displaymain.o(i.GetWorkBackColour))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelNum
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUpdateChFlag
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRssiValue
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelMsg
</UL>

<P><STRONG><a name="[175]"></a>GpioModeSwitch</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, board.o(i.GpioModeSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadWord
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
</UL>

<P><STRONG><a name="[ab]"></a>Gpio_Init</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, board.o(i.Gpio_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Gpio_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Write
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[120]"></a>HandleProgromCmd</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, progromflash.o(i.HandleProgromCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HandleProgromCmd &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteBytes
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseSector
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseChip
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Erase64kBlock
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Erase32kBlock
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_ValidationCalc
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartSendBuf
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAck
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFlashProgromMode
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bt32f0x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[17a]"></a>I2C_Read</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, i2c.o(i.I2C_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = I2C_Read &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioModeSwitch
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBuffer
</UL>

<P><STRONG><a name="[17b]"></a>I2C_ReadBuffer</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, i2c.o(i.I2C_ReadBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = I2C_ReadBuffer &rArr; I2C_Read &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5802E_SeriesRead
</UL>

<P><STRONG><a name="[17c]"></a>I2C_Start</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, i2c.o(i.I2C_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_SeriesWrite
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5802E_SeriesRead
</UL>

<P><STRONG><a name="[17d]"></a>I2C_Stop</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, i2c.o(i.I2C_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_SeriesWrite
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5802E_SeriesRead
</UL>

<P><STRONG><a name="[17e]"></a>I2C_Write</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, i2c.o(i.I2C_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = I2C_Write &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioModeSwitch
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_SeriesWrite
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5802E_SeriesRead
</UL>

<P><STRONG><a name="[17f]"></a>InputDtmfCode</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, appdtmf.o(i.InputDtmfCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = InputDtmfCode &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputDtmf
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_DtmfInput
</UL>

<P><STRONG><a name="[180]"></a>InputPinYin</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, displayinputbox.o(i.InputPinYin))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = InputPinYin &rArr; EnterSelectMode &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelectMode
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInputDisMode
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchPyIndex
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySelectPy
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharInput
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumToChar
</UL>

<P><STRONG><a name="[d3]"></a>InsertChar</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, displayinputbox.o(i.InsertChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InsertChar
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelectMode
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharInput
</UL>

<P><STRONG><a name="[181]"></a>KEY_GetKeyEvent</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, keyboard.o(i.KEY_GetKeyEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = KEY_GetKeyEvent &rArr; GetKeyCode &rArr; KEY_ReadGpioInput
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyCode
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_ScanTask
</UL>

<P><STRONG><a name="[5a]"></a>KEY_ScanTask</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, keyboard.o(i.KEY_ScanTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = KEY_ScanTask &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimeKeyLockAndPowerSave
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BackLightSetOn
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_GetKeyEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_10msTask
</UL>

<P><STRONG><a name="[183]"></a>KeyLockFunSwitch</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, functions.o(i.KeyLockFunSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = KeyLockFunSwitch &rArr; DisplayLockFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayVoice
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
</UL>

<P><STRONG><a name="[6a]"></a>KeyProcess_DtmfInput</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, appdtmf.o(i.KeyProcess_DtmfInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = KeyProcess_DtmfInput &rArr; ExitDtmfEditMode &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputDtmf
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputDtmfCode
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitDtmfEditMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
</UL>

<P><STRONG><a name="[64]"></a>KeyProcess_Fm</STRONG> (Thumb, 260 bytes, Stack size 8 bytes, appfm.o(i.KeyProcess_Fm))
<BR><BR>[Stack]<UL><LI>Max Depth = 4344<LI>Call Chain = KeyProcess_Fm &rArr; SideKey_Process &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sidekey_GetRemapEvent
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_PowerOff
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyLockFunSwitch
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayInputFreq
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayFreq
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFMMenu
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fm_KeyDigitalInput
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmSwitchChVfo
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmFreqSub
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmFreqAdd
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmAutoSeek
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitFmMode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
</UL>

<P><STRONG><a name="[6b]"></a>KeyProcess_Main</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, appmain.o(i.KeyProcess_Main))
<BR><BR>[Stack]<UL><LI>Max Depth = 4344<LI>Call Chain = KeyProcess_Main &rArr; SideKey_Process &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanStart
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_SwitchChannelOrVfo
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_SwitchAOrB
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_ReverseSwitch
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterMode
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterWeatherMode
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSearchFreqMode
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterMoniMode
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterDtmfEditMode
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualModeFastSwitch
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChDisModeFastSwitch
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyUpFun
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyDownFun
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyDigitalInput
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Backspace
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sidekey_GetRemapEvent
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyLockFunSwitch
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
</UL>

<P><STRONG><a name="[63]"></a>KeyProcess_Menu</STRONG> (Thumb, 330 bytes, Stack size 16 bytes, appmenu.o(i.KeyProcess_Menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 4448<LI>Call Chain = KeyProcess_Menu &rArr; Menu_EnterNextLevel &rArr; Menu_SaveSelectItem &rArr; EnterResetMode &rArr; App_10msTask &rArr; PTT_ScanTask &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sidekey_GetRemapEvent
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyLockFunSwitch
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T9Select
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowInputChar
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelectMode
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterRemoteScanQTMode
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeInputType
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSpace
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkInputCharMode
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Up
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_PriorLevel
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_KeyDigitalInput
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterNextLevel
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Down
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DcsSwitchPolarity
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
</UL>

<P><STRONG><a name="[65]"></a>KeyProcess_Moni</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, appmoni.o(i.KeyProcess_Moni))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = KeyProcess_Moni &rArr; ExitMoniMode &rArr; RF_RxEnd &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitMoniMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
</UL>

<P><STRONG><a name="[66]"></a>KeyProcess_Scan</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, appscan.o(i.KeyProcess_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 4352<LI>Call Chain = KeyProcess_Scan &rArr; SideKey_Process &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanOff
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayResetRxFlag
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sidekey_GetRemapEvent
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanNextChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
</UL>

<P><STRONG><a name="[68]"></a>KeyProcess_ScanQt</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, appscanqt.o(i.KeyProcess_ScanQt))
<BR><BR>[Stack]<UL><LI>Max Depth = 4344<LI>Call Chain = KeyProcess_ScanQt &rArr; SideKey_Process &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sidekey_GetRemapEvent
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QTScanDisplayStatus
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveQTScanResult
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitRemoteScanQTMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
</UL>

<P><STRONG><a name="[67]"></a>KeyProcess_Search</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, appsearch.o(i.KeyProcess_Search))
<BR><BR>[Stack]<UL><LI>Max Depth = 4448<LI>Call Chain = KeyProcess_Search &rArr; FastEnterChMemMenu &rArr; Menu_EnterNextLevel &rArr; Menu_SaveSelectItem &rArr; EnterResetMode &rArr; App_10msTask &rArr; PTT_ScanTask &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sidekey_GetRemapEvent
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqModeDisplayStepMsg
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqModeBandSwitch
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSearchFreqMode
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastEnterChMemMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
</UL>

<P><STRONG><a name="[69]"></a>KeyProcess_Weather</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, appweather.o(i.KeyProcess_Weather))
<BR><BR>[Stack]<UL><LI>Max Depth = 4352<LI>Call Chain = KeyProcess_Weather &rArr; SideKey_Process &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayResetRxFlag
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sidekey_GetRemapEvent
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanStart
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanOff
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanNextChannel
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherChannelUp
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherChannelDown
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitWeatherMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
</UL>

<P><STRONG><a name="[21a]"></a>KeyScanReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, keyboard.o(i.KeyScanReset))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TotTimeWarning
</UL>

<P><STRONG><a name="[5f]"></a>Key_GetRealEvent</STRONG> (Thumb, 116 bytes, Stack size 4 bytes, keyboard.o(i.Key_GetRealEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Key_GetRealEvent &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
</UL>

<P><STRONG><a name="[105]"></a>LCD_BackLightSetOn</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, boardfun.o(i.LCD_BackLightSetOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCD_BackLightSetOn
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBackLightSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PTT_ScanTask
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_ScanTask
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayProgrom
</UL>

<P><STRONG><a name="[78]"></a>LCD_CheckBackLight</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, boardfun.o(i.LCD_CheckBackLight))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCD_CheckBackLight
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBackLightSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_50msTask
</UL>

<P><STRONG><a name="[a4]"></a>LCD_ClearArea</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, lcdfilldot.o(i.LCD_ClearArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_ClearArea &rArr; ST7735S_ClearArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_ClearArea
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryLowFlash
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelNum
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayProgrom
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayText
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUpdateChFlag
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTxPowerLv
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayStateBar
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRssiValue
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelMsg
</UL>

<P><STRONG><a name="[a5]"></a>LCD_DisplayIcon</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, lcdfilldot.o(i.LCD_DisplayIcon))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DisplayArea
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBattaryFlag
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryLowFlash
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayProgrom
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockFlag
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVoxFlag
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUpdateChFlag
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySKeyTone
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMoniFlag
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayDualRxFlag
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelMsg
</UL>

<P><STRONG><a name="[f2]"></a>LCD_DisplayNum12x17</STRONG> (Thumb, 154 bytes, Stack size 520 bytes, lcdfilldot.o(i.LCD_DisplayNum12x17))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DisplayColorArea
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_ClearArea
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_Read_12x17_Number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputVfoFreq
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCurFreq
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelMsg
</UL>

<P><STRONG><a name="[f9]"></a>LCD_DisplayNum6X9</STRONG> (Thumb, 104 bytes, Stack size 160 bytes, lcdfilldot.o(i.LCD_DisplayNum6X9))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LCD_DisplayNum6X9 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DisplayColorArea
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_ClearArea
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_Read_6x9_Number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputVfoFreq
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputChNum
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelNum
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCurFreq
</UL>

<P><STRONG><a name="[f5]"></a>LCD_DisplayText</STRONG> (Thumb, 298 bytes, Stack size 176 bytes, lcdfilldot.o(i.LCD_DisplayText))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LCD_DisplayText &rArr; LCD_ClearArea &rArr; ST7735S_ClearArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearArea
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DisplayArea
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_Read_8x16_ASCII
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_Read_6x12_ASCII
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_Read_16x16_CN
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_Read_12x12_CN
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayProgrom
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelMsg
</UL>

<P><STRONG><a name="[f8]"></a>LCD_DisplayText5X7</STRONG> (Thumb, 62 bytes, Stack size 56 bytes, lcdfilldot.o(i.LCD_DisplayText5X7))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = LCD_DisplayText5X7 &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DisplayArea
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_Read_5x7_ASCII
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelNum
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRssiValue
</UL>

<P><STRONG><a name="[1a0]"></a>LcdBackLightSwitch</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, boardfun.o(i.LcdBackLightSwitch))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CheckBackLight
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BackLightSetOn
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_DisplayPowerOn
</UL>

<P><STRONG><a name="[3d]"></a>LedRxSwitch</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, boardfun.o(i.LedRxSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LedRxSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSearchFreqMode
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterMoniMode
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmTask
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfOff
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterProgromMode
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFlashProgromMode
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxEnd
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxReset
</UL>

<P><STRONG><a name="[3e]"></a>LedTxSwitch</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, boardfun.o(i.LedTxSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LedTxSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxEnd
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmTask
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfOff
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterProgromMode
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFlashProgromMode
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigTxMode
</UL>

<P><STRONG><a name="[56]"></a>LightFlashTask</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, boardfun.o(i.LightFlashTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LightFlashTask &rArr; LightSwitch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LightSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_100msTask
</UL>

<P><STRONG><a name="[3f]"></a>LightSwitch</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, boardfun.o(i.LightSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LightSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmTask
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LightFlashTask
</UL>

<P><STRONG><a name="[bf]"></a>ListFlagSet</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, radio.o(i.ListFlagSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ListFlagSet
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmCheckChannelActive
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelCheckActiveAll
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChMemory
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChDelete
</UL>

<P><STRONG><a name="[1a4]"></a>LongIntoI2C</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, appmenu.o(i.LongIntoI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LongIntoI2C &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChMemory
</UL>

<P><STRONG><a name="[189]"></a>Main_Backspace</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, appmain.o(i.Main_Backspace))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = Main_Backspace &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputVfoFreq
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputChNum
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
</UL>

<P><STRONG><a name="[185]"></a>Main_KeyDigitalInput</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, appmain.o(i.Main_KeyDigitalInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = Main_KeyDigitalInput &rArr; ChannelNumTypeIn &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqTypeIn
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumTypeIn
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
</UL>

<P><STRONG><a name="[188]"></a>Main_KeyDownFun</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, appmain.o(i.Main_KeyDownFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = Main_KeyDownFun &rArr; VfoFreqDown &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqDown
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayResetRxFlag
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelDown
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_CheckBusy
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
</UL>

<P><STRONG><a name="[187]"></a>Main_KeyUpFun</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, appmain.o(i.Main_KeyUpFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = Main_KeyUpFun &rArr; VfoFreqUp &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqUp
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayResetRxFlag
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelUp
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_CheckBusy
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
</UL>

<P><STRONG><a name="[ba]"></a>MenuShowInputChar</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, displaymenu.o(i.MenuShowInputChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MenuShowInputChar &rArr; DisplaySelectHz &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartSendChar
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySelectHz
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputType
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrowInputWindow
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelectMode
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeInputType
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
</UL>

<P><STRONG><a name="[ed]"></a>Menu_Display</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, displaymenu.o(i.Menu_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Menu_Display &rArr; UpdateMenuDisplay &rArr; DisplayStateBar &rArr; DisplayBattaryFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBattaryFlag
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowInputChar
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMenuDisplay
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemString
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputVfoScan
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputOffect
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputChFreq
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCtcssList
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterMode
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFMMenu
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Up
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_PriorLevel
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_KeyDigitalInput
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterNextLevel
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Down
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DcsSwitchPolarity
</UL>

<P><STRONG><a name="[192]"></a>Menu_Down</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, appmenu.o(i.Menu_Down))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Menu_Down &rArr; Menu_Display &rArr; UpdateMenuDisplay &rArr; DisplayStateBar &rArr; DisplayBattaryFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMenuExitTime
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemPara
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetFmSubItemPara
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
</UL>

<P><STRONG><a name="[186]"></a>Menu_EnterMode</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, appmenu.o(i.Menu_EnterMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = Menu_EnterMode &rArr; VoiceBroadcastWithBeepLock &rArr; Audio_PlayVoiceLock &rArr; Audio_PlayTask &rArr; Audio_PlayStart &rArr; Rfic_RxTxOnOffSetup &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMenuExitTime
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemPara
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
</UL>

<P><STRONG><a name="[148]"></a>Menu_EnterNextLevel</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, appmenu.o(i.Menu_EnterNextLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 4432<LI>Call Chain = Menu_EnterNextLevel &rArr; Menu_SaveSelectItem &rArr; EnterResetMode &rArr; App_10msTask &rArr; PTT_ScanTask &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMenuExitTime
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveSelectItem
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveFmSelectItem
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemPara
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetFmSubItemPara
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastEnterChMemMenu
</UL>

<P><STRONG><a name="[d6]"></a>Menu_ExitMode</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, appmenu.o(i.Menu_ExitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4272<LI>Call Chain = Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveVfoData
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveRadioImfosData
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveChannelData
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterWeatherMode
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSearchFreqMode
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFmMode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitAllFunction
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterRemoteScanQTMode
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChMemory
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_PriorLevel
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterResetMode
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckExitMenu
</UL>

<P><STRONG><a name="[11f]"></a>Menu_GetFmSubItemPara</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, appmenu.o(i.Menu_GetFmSubItemPara))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFMMenu
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Up
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_PriorLevel
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_KeyDigitalInput
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterNextLevel
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Down
</UL>

<P><STRONG><a name="[147]"></a>Menu_GetSubItemPara</STRONG> (Thumb, 710 bytes, Stack size 32 bytes, appmenu.o(i.Menu_GetSubItemPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Menu_GetSubItemPara &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadCtcssVal
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterMode
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Up
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_PriorLevel
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_KeyDigitalInput
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterNextLevel
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Down
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastEnterChMemMenu
</UL>

<P><STRONG><a name="[1a9]"></a>Menu_GetSubItemString</STRONG> (Thumb, 1420 bytes, Stack size 16 bytes, displaymenu.o(i.Menu_GetSubItemString))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Menu_GetSubItemString &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFmChActive
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChannelActive
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
</UL>

<P><STRONG><a name="[18e]"></a>Menu_KeyDigitalInput</STRONG> (Thumb, 302 bytes, Stack size 24 bytes, appmenu.o(i.Menu_KeyDigitalInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Menu_KeyDigitalInput &rArr; Menu_Display &rArr; UpdateMenuDisplay &rArr; DisplayStateBar &rArr; DisplayBattaryFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayChanNum
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumToChar
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanRangeTypeIn
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMenuExitTime
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemPara
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetFmSubItemPara
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreqTypeIn
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtcssTypeIn
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChanlFreqTypeIn
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
</UL>

<P><STRONG><a name="[193]"></a>Menu_PriorLevel</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, appmenu.o(i.Menu_PriorLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 4280<LI>Call Chain = Menu_PriorLevel &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ExitMode
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeFmMode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMenuExitTime
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemPara
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetFmSubItemPara
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
</UL>

<P><STRONG><a name="[1ad]"></a>Menu_SaveFmSelectItem</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, appmenu.o(i.Menu_SaveFmSelectItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Menu_SaveFmSelectItem &rArr; FmCheckChannelActive &rArr; SeekActiveFmChUp &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmCheckChannelActive
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmBandConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterNextLevel
</UL>

<P><STRONG><a name="[1ac]"></a>Menu_SaveSelectItem</STRONG> (Thumb, 778 bytes, Stack size 48 bytes, appmenu.o(i.Menu_SaveSelectItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 4416<LI>Call Chain = Menu_SaveSelectItem &rArr; EnterResetMode &rArr; App_10msTask &rArr; PTT_ScanTask &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannleVfoDataInit
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRadioDcs
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRadioCtcss
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChMemory
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChDelete
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMenuExitTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OffectFrequency2Buf
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterResetMode
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterNextLevel
</UL>

<P><STRONG><a name="[190]"></a>Menu_Up</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, appmenu.o(i.Menu_Up))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Menu_Up &rArr; Menu_Display &rArr; UpdateMenuDisplay &rArr; DisplayStateBar &rArr; DisplayBattaryFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMenuExitTime
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemPara
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetFmSubItemPara
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bt32f0x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>NVIC_Configuration</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, board.o(i.NVIC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = NVIC_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[1b7]"></a>NVIC_Init</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, bt32f0x_misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[1af]"></a>NumToChar</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, displayinputbox.o(i.NumToChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = NumToChar &rArr; InputPinYin &rArr; EnterSelectMode &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMenuExitTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPinYin
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkFirstInput
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharInput
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeCapsLow
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_KeyDigitalInput
</UL>

<P><STRONG><a name="[1b4]"></a>OffectFrequency2Buf</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, appmenu.o(i.OffectFrequency2Buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OffectFrequency2Buf &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveSelectItem
</UL>

<P><STRONG><a name="[111]"></a>PTT_GetKeyVal</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, key_ptt.o(i.PTT_GetKeyVal))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendCodeOn
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PTT_ScanTask
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitPttRelease
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxTask
</UL>

<P><STRONG><a name="[5b]"></a>PTT_ScanTask</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, key_ptt.o(i.PTT_ScanTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 4336<LI>Call Chain = PTT_ScanTask &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_CheckBusy
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimeKeyLockAndPowerSave
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BackLightSetOn
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PTT_GetKeyVal
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStop
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_10msTask
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bt32f0x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[1b9]"></a>PowerSaveTask</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, battery.o(i.PowerSaveTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = PowerSaveTask &rArr; RF_PowerSet &rArr; Rfic_GpioSetBit &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_Sleep
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_PowerSet
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WakeUp
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[1ba]"></a>ProgromInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, progromflash.o(i.ProgromInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ProgromInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[129]"></a>ProgromSendAck</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, progromflash.o(i.ProgromSendAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ProgromSendAck
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartSendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterProgromMode
</UL>

<P><STRONG><a name="[12a]"></a>ProgromSendFreqRange</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, progromflash.o(i.ProgromSendFreqRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ProgromSendFreqRange &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartSendBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterProgromMode
</UL>

<P><STRONG><a name="[12b]"></a>ProgromWriteReadData</STRONG> (Thumb, 258 bytes, Stack size 24 bytes, progromflash.o(i.ProgromWriteReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ProgromWriteReadData &rArr; Flash_SaveRadioImfosData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveVfoData
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveRadioImfosData
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteBytes
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseSector
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveRfMoudelType
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadVfoData
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterProgromMode
</UL>

<P><STRONG><a name="[1bc]"></a>QTScanDisplay</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, displayscanqt.o(i.QTScanDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = QTScanDisplay &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRemoteScanQT
</UL>

<P><STRONG><a name="[12e]"></a>QTScanDisplayHome</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, displayscanqt.o(i.QTScanDisplayHome))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = QTScanDisplayHome &rArr; QTScanDisplayStatus &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QTScanDisplayStatus
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterRemoteScanQTMode
</UL>

<P><STRONG><a name="[198]"></a>QTScanDisplayStatus</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, displayscanqt.o(i.QTScanDisplayStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = QTScanDisplayStatus &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QTScanDisplayHome
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRemoteScanQT
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_ScanQt
</UL>

<P><STRONG><a name="[7b]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bt32f0x_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
</UL>

<P><STRONG><a name="[1e8]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bt32f0x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[1ec]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bt32f0x_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[7c]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bt32f0x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
</UL>

<P><STRONG><a name="[3a]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bt32f0x_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[203]"></a>RCC_DeInit</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, bt32f0x_rcc.o(i.RCC_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[1bd]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, bt32f0x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[205]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, bt32f0x_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[20c]"></a>RCC_HCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bt32f0x_rcc.o(i.RCC_HCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[204]"></a>RCC_HSICmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bt32f0x_rcc.o(i.RCC_HSICmd))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[20d]"></a>RCC_PCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bt32f0x_rcc.o(i.RCC_PCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[206]"></a>RCC_PLLCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bt32f0x_rcc.o(i.RCC_PLLCmd))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[20a]"></a>RCC_PLLConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bt32f0x_rcc.o(i.RCC_PLLConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_PLLConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[20b]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bt32f0x_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[1be]"></a>RDA5802E_SeriesRead</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, rda5807.o(i.RDA5802E_SeriesRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = RDA5802E_SeriesRead &rArr; I2C_ReadBuffer &rArr; I2C_Read &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_STC
</UL>

<P><STRONG><a name="[164]"></a>RDA5807_FrequencyToTune</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, rda5807.o(i.RDA5807_FrequencyToTune))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = RDA5807_FrequencyToTune &rArr; RDA5807_SeriesWrite &rArr; I2C_Write &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_SeriesWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmTaskFunc
</UL>

<P><STRONG><a name="[140]"></a>RDA5807_PowerOff</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rda5807.o(i.RDA5807_PowerOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = RDA5807_PowerOff &rArr; RDA5807_SeriesWrite &rArr; I2C_Write &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_SeriesWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmEnterSleepMode
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitFmMode
</UL>

<P><STRONG><a name="[123]"></a>RDA5807_PowerOn</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rda5807.o(i.RDA5807_PowerOn))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFmMode
</UL>

<P><STRONG><a name="[165]"></a>RDA5807_STC</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, rda5807.o(i.RDA5807_STC))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = RDA5807_STC &rArr; RDA5802E_SeriesRead &rArr; I2C_ReadBuffer &rArr; I2C_Read &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5802E_SeriesRead
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmTaskFunc
</UL>

<P><STRONG><a name="[154]"></a>RDA5807_Seek</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rda5807.o(i.RDA5807_Seek))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = RDA5807_Seek &rArr; RDA5807_SeriesWrite &rArr; I2C_Write &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_SeriesWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmTaskFunc
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmAutoSeek
</UL>

<P><STRONG><a name="[1bf]"></a>RDA5807_SeriesWrite</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, rda5807.o(i.RDA5807_SeriesWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = RDA5807_SeriesWrite &rArr; I2C_Write &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_Seek
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_PowerOff
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_FrequencyToTune
</UL>

<P><STRONG><a name="[4e]"></a>RF_PowerSet</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, boardfun.o(i.RF_PowerSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = RF_PowerSet &rArr; Rfic_GpioSetBit &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GpioSetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSearchFreqMode
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmTask
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfOff
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerSaveTask
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigRxMode
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqModeBandSwitch
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitMoniMode
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigTxMode
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TotTimeWarning
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxTask
</UL>

<P><STRONG><a name="[143]"></a>RF_RxEnd</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, radiotask.o(i.RF_RxEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = RF_RxEnd &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimeKeyLockAndPowerSave
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedRxSwitch
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfGetMatchStatue
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetAfout
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitMoniMode
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[1c1]"></a>RF_RxTask</STRONG> (Thumb, 628 bytes, Stack size 24 bytes, radiotask.o(i.RF_RxTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = RF_RxTask &rArr; RF_RxEnd &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_CheckBusy
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmEnterSleepMode
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_Off
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimeKeyLockAndPowerSave
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedRxSwitch
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BackLightSetOn
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfRstMatchTimer
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetDualRxTime
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkON
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerSaveTask
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerBusy
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigRxMode
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherInit
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyTask
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetSQLinkState
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetAfout
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxEnd
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadStatuesReg
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetTail
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRxMode
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_CheckCtsState
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Task
</UL>

<P><STRONG><a name="[b5]"></a>RF_SendTail</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, devbk4819.o(i.RF_SendTail))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = RF_SendTail &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadWord
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxRoger
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_DCS_SEND_Initial
</UL>

<P><STRONG><a name="[59]"></a>RF_Task</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, radiotask.o(i.RF_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = RF_Task &rArr; RF_RxTask &rArr; RF_RxEnd &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxTask
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_10msTask
</UL>

<P><STRONG><a name="[41]"></a>RF_TxEnd</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, radiotask.o(i.RF_TxEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RF_TxEnd &rArr; LedTxSwitch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedTxSwitch
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfRstMatchTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxRoger
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
</UL>

<P><STRONG><a name="[4c]"></a>RF_TxRoger</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, radiotask.o(i.RF_TxRoger))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = RF_TxRoger &rArr; DtmfSendTxOver &rArr; Rfic_ExitDTMFMode &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxEnd
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTxOver
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SendTail
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmTask
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TotTimeWarning
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxTask
</UL>

<P><STRONG><a name="[1cd]"></a>RF_TxTask</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, radiotask.o(i.RF_TxTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = RF_TxTask &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetPA
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimeKeyLockAndPowerSave
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxRoger
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendCodeOn
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAlarmCode
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfOff
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_PowerSet
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PTT_GetKeyVal
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigTxMode
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TotTimeWarning
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Task
</UL>

<P><STRONG><a name="[1d1]"></a>RadioConfig_Init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, radio.o(i.RadioConfig_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = RadioConfig_Init &rArr; Flash_ReadRadioImfosData &rArr; ResetRadioFunData &rArr; Flash_SaveRadioImfosData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfInfoInit
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadSystemRunData
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadRadioImfosData
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadFmData
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadDebugImfosData
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d3]"></a>RadioVfoInfo_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, radio.o(i.RadioVfoInfo_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = RadioVfoInfo_Init &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannleVfoDataInit
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>Radio_EnterTxMode</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, radiotask.o(i.Radio_EnterTxMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4312<LI>Call Chain = Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimeKeyLockAndPowerSave
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitAllFunction
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetDtmfEditCode
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDtmfEditCode
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDisANIFlag
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBatteryCanTx
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumChangeRead
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitMoniMode
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTxMode
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitPttRelease
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreqInTxFreqRange
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmTask
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoxCheckTask
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PTT_ScanTask
</UL>

<P><STRONG><a name="[1d8]"></a>Radio_ReverseOff</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, radio.o(i.Radio_ReverseOff))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqUp
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqTypeIn
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqDown
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_ReverseSwitch
</UL>

<P><STRONG><a name="[18c]"></a>Radio_ReverseSwitch</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, radio.o(i.Radio_ReverseSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = Radio_ReverseSwitch &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreqInRange
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxReset
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_ReverseOff
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
</UL>

<P><STRONG><a name="[18b]"></a>Radio_SwitchAOrB</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, radio.o(i.Radio_SwitchAOrB))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = Radio_SwitchAOrB &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxReset
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
</UL>

<P><STRONG><a name="[18a]"></a>Radio_SwitchChannelOrVfo</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, radio.o(i.Radio_SwitchChannelOrVfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = Radio_SwitchChannelOrVfo &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayVoice
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannleVfoDataInit
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxReset
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
</UL>

<P><STRONG><a name="[60]"></a>Radio_TxKeyTone</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, functions.o(i.Radio_TxKeyTone))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Radio_TxKeyTone &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_Off
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetDtmfFreq
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ExitDTMFMode
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendKeypadCode
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
</UL>

<P><STRONG><a name="[1d9]"></a>Radio_TxPowerSWitch</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, functions.o(i.Radio_TxPowerSWitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = Radio_TxPowerSWitch &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
</UL>

<P><STRONG><a name="[1da]"></a>Reset21Chans</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, radiodatareset.o(i.Reset21Chans))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Reset21Chans &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteBytes
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Erase32kBlock
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetChannelData
</UL>

<P><STRONG><a name="[133]"></a>ResetChannelData</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, radiodatareset.o(i.ResetChannelData))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ResetChannelData &rArr; Flash_SaveSystemRunData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveSystemRunData
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset21Chans
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChDelete
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterResetMode
</UL>

<P><STRONG><a name="[1d7]"></a>ResetDtmfEditCode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, appdtmf.o(i.ResetDtmfEditCode))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
</UL>

<P><STRONG><a name="[1c9]"></a>ResetDualRxTime</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dualstandby.o(i.ResetDualRxTime))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[b8]"></a>ResetInputBuf</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, functions.o(i.ResetInputBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ResetInputBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqTypeIn
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanStart
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_TxPowerSWitch
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_ReverseSwitch
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterMode
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterWeatherMode
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterDtmfEditMode
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualModeFastSwitch
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumTypeIn
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChDisModeFastSwitch
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyUpFun
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyDownFun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ExitMode
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFMMenu
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeFmMode
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmFreqTypeIn
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmChNumTypeIn
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitFmMode
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFmMode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitAllFunction
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitDtmfEditMode
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanStart
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitWeatherMode
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitRemoteScanQTMode
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumChangeRead
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterRemoteScanQTMode
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Up
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_PriorLevel
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterNextLevel
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Down
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FastEnterChMemMenu
</UL>

<P><STRONG><a name="[97]"></a>ResetMenuExitTime</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, appmenu.o(i.ResetMenuExitTime))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterMode
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFMMenu
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T9Select
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumToChar
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelectMode
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeInputType
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSpace
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Up
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveSelectItem
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_PriorLevel
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_KeyDigitalInput
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterNextLevel
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Down
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DcsSwitchPolarity
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSpaceChar
</UL>

<P><STRONG><a name="[131]"></a>ResetRadioFunData</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, radiodatareset.o(i.ResetRadioFunData))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ResetRadioFunData &rArr; Flash_SaveRadioImfosData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveRadioImfosData
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteBytes
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseSector
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterResetMode
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadRadioImfosData
</UL>

<P><STRONG><a name="[4f]"></a>ResetTimeKeyLockAndPowerSave</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, battery.o(i.ResetTimeKeyLockAndPowerSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ResetTimeKeyLockAndPowerSave &rArr; Rfic_WakeUp &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WakeUp
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmTask
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanNextChannel
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PTT_ScanTask
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_ScanTask
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryCheckTask
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanNextChannel
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxEnd
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxTask
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxReset
</UL>

<P><STRONG><a name="[130]"></a>ResetVfoModeData</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, radiodatareset.o(i.ResetVfoModeData))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ResetVfoModeData &rArr; Flash_SaveVfoData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveVfoData
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterResetMode
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadVfoData
</UL>

<P><STRONG><a name="[d7]"></a>ResumeFmMode</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, appfm.o(i.ResumeFmMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = ResumeFmMode &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayHome
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveFmData
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_PriorLevel
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckExitMenu
</UL>

<P><STRONG><a name="[de]"></a>RfOff</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, radiotask.o(i.RfOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = RfOff &rArr; RF_PowerSet &rArr; Rfic_GpioSetBit &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_PowerSet
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedTxSwitch
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedRxSwitch
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetAfout
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOff
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterProgromMode
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxTask
</UL>

<P><STRONG><a name="[1db]"></a>Rfic_BandInitial</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, devbk4819.o(i.Rfic_BandInitial))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Rfic_BandInitial &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigRxMode
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_CtcDcsScan_Setup
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigTxMode
</UL>

<P><STRONG><a name="[1dc]"></a>Rfic_ByteWrite</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, devbk4819.o(i.Rfic_ByteWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadWord
</UL>

<P><STRONG><a name="[1ca]"></a>Rfic_CheckCtsState</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, radiotask.o(i.Rfic_CheckCtsState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Rfic_CheckCtsState
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SubaudioDetect
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[1de]"></a>Rfic_CheckFreqScan</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_CheckFreqScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Rfic_CheckFreqScan &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadWord
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
</UL>

<P><STRONG><a name="[1c6]"></a>Rfic_ConfigRxMode</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, devbk4819.o(i.Rfic_ConfigRxMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Rfic_ConfigRxMode &rArr; RF_PowerSet &rArr; Rfic_GpioSetBit &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_PowerSet
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SwitchFM_AM
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetScramble
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SQLSetup
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_BandInitial
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_DCS_RECE_Initial
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHardWorkBand
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherInit
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[1ce]"></a>Rfic_ConfigTxMode</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, devbk4819.o(i.Rfic_ConfigTxMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Rfic_ConfigTxMode &rArr; RF_PowerSet &rArr; Rfic_GpioSetBit &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetPA
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_PowerSet
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedTxSwitch
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SwitchFM_AM
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetScramble
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadWord
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetTxPAPara
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_BandInitial
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_DCS_SEND_Initial
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxTask
</UL>

<P><STRONG><a name="[1e2]"></a>Rfic_CtcDcsScan_Setup</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_CtcDcsScan_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Rfic_CtcDcsScan_Setup &rArr; Rfic_BandInitial &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_BandInitial
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
</UL>

<P><STRONG><a name="[114]"></a>Rfic_EnterDTMFMode</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_EnterDTMFMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Rfic_EnterDTMFMode &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTxOver
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTask
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendKeypadCode
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TotTimeWarning
</UL>

<P><STRONG><a name="[116]"></a>Rfic_ExitDTMFMode</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_ExitDTMFMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Rfic_ExitDTMFMode &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetScramble
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadWord
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTxOver
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_TxKeyTone
</UL>

<P><STRONG><a name="[145]"></a>Rfic_FreqScan_Disable</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_FreqScan_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Rfic_FreqScan_Disable &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSearchFreqMode
</UL>

<P><STRONG><a name="[1e3]"></a>Rfic_FreqScan_Enable</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_FreqScan_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Rfic_FreqScan_Enable &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
</UL>

<P><STRONG><a name="[1e4]"></a>Rfic_GetCtsDcsData</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, devbk4819.o(i.Rfic_GetCtsDcsData))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Rfic_GetCtsDcsData &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadWord
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRemoteScanQT
</UL>

<P><STRONG><a name="[b6]"></a>Rfic_GetRssiVal</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_GetRssiVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Rfic_GetRssiVal &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadWord
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSqlLevel
</UL>

<P><STRONG><a name="[1e5]"></a>Rfic_GetRxTxState</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_GetRxTxState))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Rfic_GetRxTxState &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadWord
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_Off
</UL>

<P><STRONG><a name="[1fb]"></a>Rfic_GetSCtsDcsType</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, devbk4819.o(i.Rfic_GetSCtsDcsType))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRemoteScanQT
</UL>

<P><STRONG><a name="[1c3]"></a>Rfic_GetSQLinkState</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, devbk4819.o(i.Rfic_GetSQLinkState))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanTask
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRemoteScanQT
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanTask
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[1c5]"></a>Rfic_GetTail</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, devbk4819.o(i.Rfic_GetTail))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[1e1]"></a>Rfic_GetTxPAPara</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, devbk4819.o(i.Rfic_GetTxPAPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Rfic_GetTxPAPara &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigTxMode
</UL>

<P><STRONG><a name="[1c0]"></a>Rfic_GpioSetBit</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, devbk4819.o(i.Rfic_GpioSetBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Rfic_GpioSetBit &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadWord
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_PowerSet
</UL>

<P><STRONG><a name="[1e6]"></a>Rfic_Init</STRONG> (Thumb, 392 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Rfic_Init &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadWord
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c2]"></a>Rfic_ReadStatuesReg</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_ReadStatuesReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Rfic_ReadStatuesReg &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadWord
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[1cc]"></a>Rfic_ReadWord</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, devbk4819.o(i.Rfic_ReadWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioModeSwitch
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ByteWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_On
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GpioSetBit
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ExitDTMFMode
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_Init
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_CheckFreqScan
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetCtsDcsData
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetScramble
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetRxTxState
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadStatuesReg
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetRssiVal
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigTxMode
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SendTail
</UL>

<P><STRONG><a name="[48]"></a>Rfic_RxTxOnOffSetup</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_RxTxOnOffSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Rfic_RxTxOnOffSetup &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_On
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_Off
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmTask
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTxOver
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTask
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendKeypadCode
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerSaveTask
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigRxMode
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_CtcDcsScan_Setup
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ScanQT_Enable
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayTask
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigTxMode
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitPttRelease
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TotTimeWarning
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxTask
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStart
</UL>

<P><STRONG><a name="[1df]"></a>Rfic_SQLSetup</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, devbk4819.o(i.Rfic_SQLSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Rfic_SQLSetup &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigRxMode
</UL>

<P><STRONG><a name="[1e7]"></a>Rfic_ScanQT_Enable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_ScanQT_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Rfic_ScanQT_Enable &rArr; Rfic_RxTxOnOffSetup &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRemoteScanQT
</UL>

<P><STRONG><a name="[a6]"></a>Rfic_SetAfout</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, devbk4819.o(i.Rfic_SetAfout))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Rfic_SetAfout &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSearchFreqMode
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterMoniMode
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_On
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_Off
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfOff
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTxOver
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTask
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendKeypadCode
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxEnd
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TotTimeWarning
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxReset
</UL>

<P><STRONG><a name="[115]"></a>Rfic_SetDtmfFreq</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_SetDtmfFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Rfic_SetDtmfFreq &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTxOver
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTask
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendKeypadCode
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_TxKeyTone
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TotTimeWarning
</UL>

<P><STRONG><a name="[4d]"></a>Rfic_SetPA</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, devbk4819.o(i.Rfic_SetPA))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Rfic_SetPA &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmTask
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigTxMode
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TotTimeWarning
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxTask
</UL>

<P><STRONG><a name="[1e0]"></a>Rfic_SetScramble</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, devbk4819.o(i.Rfic_SetScramble))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadWord
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_Off
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ExitDTMFMode
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigRxMode
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigTxMode
</UL>

<P><STRONG><a name="[49]"></a>Rfic_SetToneFreq</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_SetToneFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Rfic_SetToneFreq &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_Off
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmTask
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmOut
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendKeypadCode
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitPttRelease
</UL>

<P><STRONG><a name="[df]"></a>Rfic_Sleep</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_Sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Rfic_Sleep &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOff
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerSaveTask
</UL>

<P><STRONG><a name="[1dd]"></a>Rfic_SubaudioDetect</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, devbk4819.o(i.Rfic_SubaudioDetect))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_CheckCtsState
</UL>

<P><STRONG><a name="[135]"></a>Rfic_SwitchFM_AM</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, devbk4819.o(i.Rfic_SwitchFM_AM))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSearchFreqMode
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigRxMode
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigTxMode
</UL>

<P><STRONG><a name="[46]"></a>Rfic_TxSingleTone_Off</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, devbk4819.o(i.Rfic_TxSingleTone_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetToneFreq
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetAfout
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetScramble
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetRxTxState
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterMoniMode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmOut
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_TxKeyTone
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitPttRelease
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TotTimeWarning
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[4a]"></a>Rfic_TxSingleTone_On</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_TxSingleTone_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Rfic_TxSingleTone_On &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetAfout
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ReadWord
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmOut
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendKeypadCode
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitPttRelease
</UL>

<P><STRONG><a name="[127]"></a>Rfic_WakeUp</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, devbk4819.o(i.Rfic_WakeUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Rfic_WakeUp &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WriteWord
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterMoniMode
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimeKeyLockAndPowerSave
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerSaveTask
</UL>

<P><STRONG><a name="[b1]"></a>Rfic_WriteWord</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, devbk4819.o(i.Rfic_WriteWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ByteWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_On
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_Off
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetToneFreq
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetPA
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_Sleep
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GpioSetBit
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetDtmfFreq
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ExitDTMFMode
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_EnterDTMFMode
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_Init
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigRxMode
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_FreqScan_Enable
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_FreqScan_Disable
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_CtcDcsScan_Setup
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTCSS_WithRfic
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ScanQT_Enable
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_WakeUp
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetAfout
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetScramble
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SQLSetup
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_BandInitial
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTS_DCS_SEND_Initial
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTCSS_WithRfic
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigTxMode
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SendTail
</UL>

<P><STRONG><a name="[c9]"></a>RxReset</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, radiotask.o(i.RxReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = RxReset &rArr; ResetTimeKeyLockAndPowerSave &rArr; Rfic_WakeUp &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimeKeyLockAndPowerSave
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedRxSwitch
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetAfout
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqUp
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqTypeIn
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqDown
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_SwitchChannelOrVfo
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_SwitchAOrB
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_ReverseSwitch
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumChangeRead
</UL>

<P><STRONG><a name="[ac]"></a>SPI2_Init</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, board.o(i.SPI2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SPI2_Init &rArr; SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[1eb]"></a>SPI_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bt32f0x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[214]"></a>SPI_GetReceptionFIFOStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bt32f0x_spi.o(i.SPI_GetReceptionFIFOStatus))
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_SendByte
</UL>

<P><STRONG><a name="[1e9]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bt32f0x_spi.o(i.SPI_I2S_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_I2S_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[1f3]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bt32f0x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Data_Write
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Command_Write
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_SendByte
</UL>

<P><STRONG><a name="[1ea]"></a>SPI_Init</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, bt32f0x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[215]"></a>SPI_ReceiveData8</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt32f0x_spi.o(i.SPI_ReceiveData8))
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_SendByte
</UL>

<P><STRONG><a name="[1f4]"></a>SPI_SendData8</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt32f0x_spi.o(i.SPI_SendData8))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Data_Write
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Command_Write
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_SendByte
</UL>

<P><STRONG><a name="[1ed]"></a>ST7735S_Clear</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, st7735s.o(i.ST7735S_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ST7735S_Clear &rArr; ST7735S_Window &rArr; ST7735S_Window_Set &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Init
</UL>

<P><STRONG><a name="[1a1]"></a>ST7735S_ClearArea</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, st7735s.o(i.ST7735S_ClearArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ST7735S_ClearArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWord
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_SetRamAddr
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_GRAM_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearArea
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNum6X9
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNum12x17
</UL>

<P><STRONG><a name="[1f2]"></a>ST7735S_Command_Write</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, st7735s.o(i.ST7735S_Command_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ST7735S_Command_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData8
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Init
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Window_Set
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_SetRamAddr
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_GRAM_Write
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Cursor_Set
</UL>

<P><STRONG><a name="[1f5]"></a>ST7735S_Cursor_Set</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, st7735s.o(i.ST7735S_Cursor_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ST7735S_Cursor_Set &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Data_Write
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Command_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Window
</UL>

<P><STRONG><a name="[1f6]"></a>ST7735S_Data_Write</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, st7735s.o(i.ST7735S_Data_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData8
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Init
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWord
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Window_Set
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Window
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Cursor_Set
</UL>

<P><STRONG><a name="[1a2]"></a>ST7735S_DisplayArea</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, st7735s.o(i.ST7735S_DisplayArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWord
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_SetRamAddr
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_GRAM_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayIcon
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayText5X7
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayText
</UL>

<P><STRONG><a name="[1a3]"></a>ST7735S_DisplayColorArea</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, st7735s.o(i.ST7735S_DisplayColorArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWord
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_SetRamAddr
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_GRAM_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_DisplayPowerOn
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNum6X9
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNum12x17
</UL>

<P><STRONG><a name="[fc]"></a>ST7735S_DrawHorizonLine</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, st7735s.o(i.ST7735S_DrawHorizonLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ST7735S_DrawHorizonLine &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWord
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_SetRamAddr
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_GRAM_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHomePage
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTxPowerLv
</UL>

<P><STRONG><a name="[10d]"></a>ST7735S_DrawVerticalLine</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, st7735s.o(i.ST7735S_DrawVerticalLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ST7735S_DrawVerticalLine &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWord
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_SetRamAddr
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_GRAM_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTxPowerLv
</UL>

<P><STRONG><a name="[1f0]"></a>ST7735S_GRAM_Write</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, st7735s.o(i.ST7735S_GRAM_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ST7735S_GRAM_Write &rArr; ST7735S_Command_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Command_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Window
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DrawVerticalLine
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DrawHorizonLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DisplayColorArea
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DisplayArea
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_ClearArea
</UL>

<P><STRONG><a name="[1f7]"></a>ST7735S_Init</STRONG> (Thumb, 506 bytes, Stack size 16 bytes, st7735s.o(i.ST7735S_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ST7735S_Init &rArr; ST7735S_Clear &rArr; ST7735S_Window &rArr; ST7735S_Window_Set &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Data_Write
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Command_Write
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ef]"></a>ST7735S_SetRamAddr</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, st7735s.o(i.ST7735S_SetRamAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWord
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Command_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DrawVerticalLine
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DrawHorizonLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DisplayColorArea
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DisplayArea
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_ClearArea
</UL>

<P><STRONG><a name="[1ee]"></a>ST7735S_Window</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, st7735s.o(i.ST7735S_Window))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ST7735S_Window &rArr; ST7735S_Window_Set &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Window_Set
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_GRAM_Write
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Data_Write
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Cursor_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Clear
</UL>

<P><STRONG><a name="[1f8]"></a>ST7735S_Window_Set</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, st7735s.o(i.ST7735S_Window_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ST7735S_Window_Set &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Data_Write
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Command_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Window
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bt32f0x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[238]"></a>SYSCFG_MemoryRemapConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bt32f0x_syscfg.o(i.SYSCFG_MemoryRemapConfig))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b6]"></a>SaveChDelete</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, appmenu.o(i.SaveChDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = SaveChDelete &rArr; VoiceBroadcastWithBeepLock &rArr; Audio_PlayVoiceLock &rArr; Audio_PlayTask &rArr; Audio_PlayStart &rArr; Rfic_RxTxOnOffSetup &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListFlagSet
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekActiveChannel_Up
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetChannelData
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_DeleteChannelData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChannelActive
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannleVfoDataInit
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveSelectItem
</UL>

<P><STRONG><a name="[1b5]"></a>SaveChMemory</STRONG> (Thumb, 552 bytes, Stack size 64 bytes, appmenu.o(i.SaveChMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 4336<LI>Call Chain = SaveChMemory &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ExitMode
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListFlagSet
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveSystemRunData
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ModifyChannelData
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChannelActive
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannleVfoDataInit
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LongIntoI2C
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveSelectItem
</UL>

<P><STRONG><a name="[197]"></a>SaveQTScanResult</STRONG> (Thumb, 334 bytes, Stack size 24 bytes, appscanqt.o(i.SaveQTScanResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 4288<LI>Call Chain = SaveQTScanResult &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveVfoData
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveChannelData
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannleVfoDataInit
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_ScanQt
</UL>

<P><STRONG><a name="[1b2]"></a>SaveRadioCtcss</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, appmenu.o(i.SaveRadioCtcss))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = SaveRadioCtcss &rArr; ChannleVfoDataInit &rArr; Flash_ReadVfoData &rArr; ResetVfoModeData &rArr; Flash_SaveVfoData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannleVfoDataInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveSelectItem
</UL>

<P><STRONG><a name="[1b3]"></a>SaveRadioDcs</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, appmenu.o(i.SaveRadioDcs))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = SaveRadioDcs &rArr; ChannleVfoDataInit &rArr; Flash_ReadVfoData &rArr; ResetVfoModeData &rArr; Flash_SaveVfoData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannleVfoDataInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveSelectItem
</UL>

<P><STRONG><a name="[194]"></a>ScanNextChannel</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, appscan.o(i.ScanNextChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = ScanNextChannel &rArr; VfoFreqUp &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqUp
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqDown
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelUp
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelDown
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimeKeyLockAndPowerSave
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelNum
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanStart
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanTask
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Scan
</UL>

<P><STRONG><a name="[196]"></a>ScanOff</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, appscan.o(i.ScanOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = ScanOff &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Scan
</UL>

<P><STRONG><a name="[1b0]"></a>ScanRangeTypeIn</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, appmenu.o(i.ScanRangeTypeIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = ScanRangeTypeIn &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayChanNum
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_KeyDigitalInput
</UL>

<P><STRONG><a name="[18d]"></a>ScanStart</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, appscan.o(i.ScanStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = ScanStart &rArr; ScanNextChannel &rArr; VfoFreqUp &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanNextChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
</UL>

<P><STRONG><a name="[75]"></a>ScanTask</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, appscan.o(i.ScanTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = ScanTask &rArr; ScanNextChannel &rArr; VfoFreqUp &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetSQLinkState
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelNumChangeRead
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanNextChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_50msTask
</UL>

<P><STRONG><a name="[136]"></a>SearchFreqDisplayHome</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, displaysearch.o(i.SearchFreqDisplayHome))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SearchFreqDisplayHome &rArr; SearchFreqModeDisplayStepMsg &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqModeDisplayStepMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSearchFreqMode
</UL>

<P><STRONG><a name="[19a]"></a>SearchFreqModeBandSwitch</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, appsearch.o(i.SearchFreqModeBandSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SearchFreqModeBandSwitch &rArr; RF_PowerSet &rArr; Rfic_GpioSetBit &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_PowerSet
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Search
</UL>

<P><STRONG><a name="[1fa]"></a>SearchFreqModeDisplayDCSData</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, displaysearch.o(i.SearchFreqModeDisplayDCSData))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SearchFreqModeDisplayDCSData &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
</UL>

<P><STRONG><a name="[199]"></a>SearchFreqModeDisplayStepMsg</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, displaysearch.o(i.SearchFreqModeDisplayStepMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SearchFreqModeDisplayStepMsg &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqDisplayHome
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Search
</UL>

<P><STRONG><a name="[51]"></a>SearchFreqTask</STRONG> (Thumb, 798 bytes, Stack size 24 bytes, appsearch.o(i.SearchFreqTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = SearchFreqTask &rArr; ExitSearchFreqMode &rArr; DisplayHomePage &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedRxSwitch
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqModeDisplayStepMsg
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqModeDisplayDCSData
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SubaudioDetect
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_FreqScan_Enable
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_FreqScan_Disable
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_CtcDcsScan_Setup
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_CheckFreqScan
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTCSS_WithRfic
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSearchFreqMode
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetSCtsDcsType
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetCtsDcsData
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIsStandardDCS
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIsStandardCTCSS
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetSQLinkState
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetAfout
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_100msTask
</UL>

<P><STRONG><a name="[98]"></a>SearchPyIndex</STRONG> (Thumb, 342 bytes, Stack size 48 bytes, displayinputbox.o(i.SearchPyIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SearchPyIndex &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc7B_To_Bcd4B
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSpace
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPinYin
</UL>

<P><STRONG><a name="[c3]"></a>SeekActiveChannel_Down</STRONG> (Thumb, 62 bytes, Stack size 28 bytes, radio.o(i.SeekActiveChannel_Down))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SeekActiveChannel_Down
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChannelActive
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelDown
</UL>

<P><STRONG><a name="[c1]"></a>SeekActiveChannel_Up</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, radio.o(i.SeekActiveChannel_Up))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SeekActiveChannel_Up &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChannelActive
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelUp
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelCheckActiveAll
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChDelete
</UL>

<P><STRONG><a name="[161]"></a>SeekActiveFmChDown</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, appfm.o(i.SeekActiveFmChDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SeekActiveFmChDown
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFmChActive
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmFreqSub
</UL>

<P><STRONG><a name="[15b]"></a>SeekActiveFmChUp</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, appfm.o(i.SeekActiveFmChUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SeekActiveFmChUp &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFmChActive
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmFreqAdd
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmCheckChannelActive
</UL>

<P><STRONG><a name="[1ff]"></a>SelectBD</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, displayinputbox.o(i.SelectBD))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SelectBD &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T9Select
</UL>

<P><STRONG><a name="[200]"></a>SelectHZ</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, displayinputbox.o(i.SelectHZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SelectHZ &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T9Select
</UL>

<P><STRONG><a name="[201]"></a>SelectPinYin</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, displayinputbox.o(i.SelectPinYin))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SelectPinYin &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T9Select
</UL>

<P><STRONG><a name="[1cf]"></a>SetAlarmCode</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, appalarm.o(i.SetAlarmCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = SetAlarmCode &rArr; DtmfSendCodeOn &rArr; DtmfSendTask &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendCodeOn
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmOut
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxTask
</UL>

<P><STRONG><a name="[9c]"></a>SetInputDisMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, displayinputbox.o(i.SetInputDisMode))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelectMode
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeInputType
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackSpace
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPinYin
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrowInputWindow
</UL>

<P><STRONG><a name="[184]"></a>SideKey_Process</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, appmain.o(i.SideKey_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 4336<LI>Call Chain = SideKey_Process &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanStart
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanOff
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_TxPowerSWitch
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitFmMode
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFmMode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LightSwitch
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Weather
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Search
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_ScanQt
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Scan
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
</UL>

<P><STRONG><a name="[61]"></a>Sidekey_GetRemapEvent</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, appmain.o(i.Sidekey_GetRemapEvent))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Weather
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Search
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_ScanQt
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Scan
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
</UL>

<P><STRONG><a name="[43]"></a>SpeakerSwitch</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, boardfun.o(i.SpeakerSwitch))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSearchFreqMode
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterMoniMode
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RDA5807_FrequencyToTune
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmTaskFunc
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmEnterSleepMode
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitFmMode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmTask
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFuncSwitch
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTxOver
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendTask
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendKeypadCode
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_TxKeyTone
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxEnd
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitMoniMode
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayTask
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitPttRelease
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TotTimeWarning
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStop
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStart
</UL>

<P><STRONG><a name="[20f]"></a>SpiFlash_CheckBusy</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, norflash.o(i.SpiFlash_CheckBusy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseSector
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseChip
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Erase64kBlock
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Erase32kBlock
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteByte_InPage
</UL>

<P><STRONG><a name="[178]"></a>SpiFlash_Erase32kBlock</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, norflash.o(i.SpiFlash_Erase32kBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SpiFlash_Erase32kBlock &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteEnable
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_SendByte
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_CheckBusy
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCsDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleProgromCmd
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset21Chans
</UL>

<P><STRONG><a name="[179]"></a>SpiFlash_Erase64kBlock</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, norflash.o(i.SpiFlash_Erase64kBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SpiFlash_Erase64kBlock &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteEnable
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_SendByte
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_CheckBusy
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCsDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleProgromCmd
</UL>

<P><STRONG><a name="[177]"></a>SpiFlash_EraseChip</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, norflash.o(i.SpiFlash_EraseChip))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SpiFlash_EraseChip &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteEnable
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_SendByte
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_CheckBusy
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCsDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleProgromCmd
</UL>

<P><STRONG><a name="[14e]"></a>SpiFlash_EraseSector</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, norflash.o(i.SpiFlash_EraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SpiFlash_EraseSector &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteEnable
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_SendByte
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_CheckBusy
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCsDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveVfoData
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveSystemRunData
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveRadioImfosData
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRadioFunData
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ModifyChannelData
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadRadioImfosData
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadVfoData
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromWriteReadData
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleProgromCmd
</UL>

<P><STRONG><a name="[af]"></a>SpiFlash_Init</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, norflash.o(i.SpiFlash_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SpiFlash_Init &rArr; SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCsDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[8c]"></a>SpiFlash_ReadBytes</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, norflash.o(i.SpiFlash_ReadBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_SendByte
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCsDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfSendCodeOn
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveRadioImfosData
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveChannelData
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfInfoInit
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_DisplayPowerOn
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelCheckActiveAll
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ModifyChannelData
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelectMode
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannleVfoDataInit
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChMemory
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadSystemRunData
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadRadioImfosData
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadDebugImfosData
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadVfoData
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromWriteReadData
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromSendFreqRange
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GetLogicAddrShift
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_Read_8x16_ASCII
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_Read_6x9_Number
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_Read_6x12_ASCII
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_Read_5x7_ASCII
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_Read_16x16_CN
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_Read_12x17_Number
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_Read_12x12_CN
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchPyIndex
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySelectPy
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStart
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayContinue
</UL>

<P><STRONG><a name="[210]"></a>SpiFlash_ReadStatus</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, norflash.o(i.SpiFlash_ReadStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_SendByte
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCsDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_CheckBusy
</UL>

<P><STRONG><a name="[213]"></a>SpiFlash_SendByte</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, norflash.o(i.SpiFlash_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData8
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReceiveData8
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetReceptionFIFOStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseSector
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseChip
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Erase64kBlock
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Erase32kBlock
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteEnable
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteByte_InPage
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadStatus
</UL>

<P><STRONG><a name="[216]"></a>SpiFlash_WriteByte_InPage</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, norflash.o(i.SpiFlash_WriteByte_InPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteEnable
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_SendByte
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_CheckBusy
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCsDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteBytes
</UL>

<P><STRONG><a name="[14b]"></a>SpiFlash_WriteBytes</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, norflash.o(i.SpiFlash_WriteBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteByte_InPage
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveVfoData
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveSystemRunData
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveRadioImfosData
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRadioFunData
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ModifyChannelData
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_DeleteChannelData
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromWriteReadData
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleProgromCmd
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset21Chans
</UL>

<P><STRONG><a name="[211]"></a>SpiFlash_WriteEnable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, norflash.o(i.SpiFlash_WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SpiFlash_WriteEnable &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_SendByte
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCsDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseSector
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_EraseChip
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Erase64kBlock
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Erase32kBlock
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteByte_InPage
</UL>

<P><STRONG><a name="[e5]"></a>StatusAck</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, progromflash.o(i.StatusAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = StatusAck &rArr; CRC_ValidationCalc
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_ValidationCalc
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartSendBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFlashProgromMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleProgromCmd
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRxDataOk
</UL>

<P><STRONG><a name="[217]"></a>SysTickHandler</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, systick.o(i.SysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SysTickHandler &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckAlarmDelay
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bt32f0x_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SysTick_Handler &rArr; SysTickHandler &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>SysTick_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, board.o(i.SysTick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SysTick_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[26]"></a>SystemInit</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, system_bt32f0x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; RCC_PLLConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(.text)
</UL>
<P><STRONG><a name="[191]"></a>T9Select</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, displayinputbox.o(i.T9Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = T9Select &rArr; DisplaySelectPy &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMenuExitTime
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectPinYin
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectHZ
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectBD
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySelectPy
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePos
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
</UL>

<P><STRONG><a name="[87]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bt32f0x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
</UL>

<P><STRONG><a name="[88]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bt32f0x_tim.o(i.TIM_CtrlPWMOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayTask
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStop
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStart
</UL>

<P><STRONG><a name="[85]"></a>TIM_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bt32f0x_tim.o(i.TIM_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
</UL>

<P><STRONG><a name="[86]"></a>TIM_DMAConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bt32f0x_tim.o(i.TIM_DMAConfig))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
</UL>

<P><STRONG><a name="[84]"></a>TIM_OC4Init</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, bt32f0x_tim.o(i.TIM_OC4Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
</UL>

<P><STRONG><a name="[83]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, bt32f0x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHard_Init
</UL>

<P><STRONG><a name="[52]"></a>TaskRemoteScanQT</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, appscanqt.o(i.TaskRemoteScanQT))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = TaskRemoteScanQT &rArr; Rfic_GetCtsDcsData &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ScanQT_Enable
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetSCtsDcsType
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetCtsDcsData
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QTScanDisplayStatus
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QTScanDisplay
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIsStandardDCS
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIsStandardCTCSS
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetSQLinkState
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_100msTask
</UL>

<P><STRONG><a name="[1d0]"></a>TotTimeWarning</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, radiotask.o(i.TotTimeWarning))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = TotTimeWarning &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_Off
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetPA
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxRoger
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_PowerSet
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetDtmfFreq
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_EnterDTMFMode
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayVoiceLock
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetAfout
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScanReset
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitPttRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxTask
</UL>

<P><STRONG><a name="[21b]"></a>TranStrToMiddle</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, displaymain.o(i.TranStrToMiddle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TranStrToMiddle
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMenuDisplay
</UL>

<P><STRONG><a name="[21c]"></a>UI_DisplayPowerOn</STRONG> (Thumb, 106 bytes, Stack size 2592 bytes, displaypoweron.o(i.UI_DisplayPowerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 2688<LI>Call Chain = UI_DisplayPowerOn &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBackLightSwitch
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadBytes
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBatteryVol
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DisplayColorArea
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21e]"></a>USART1_Handler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, board.o(i.USART1_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USART1_Handler &rArr; CheckProgromMode &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckProgromMode
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[21]"></a>USART1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bt32f0x_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USART1_IRQHandler &rArr; USART1_Handler &rArr; CheckProgromMode &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USART2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bt32f0x_it.o(i.USART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_bt32f0x.o(RESET)
</UL>
<P><STRONG><a name="[224]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bt32f0x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Init
</UL>

<P><STRONG><a name="[21f]"></a>USART_GetITStatus</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, bt32f0x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Handler
</UL>

<P><STRONG><a name="[223]"></a>USART_ITConfig</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bt32f0x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Init
</UL>

<P><STRONG><a name="[221]"></a>USART_Init</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, bt32f0x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Init
</UL>

<P><STRONG><a name="[220]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bt32f0x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Handler
</UL>

<P><STRONG><a name="[12c]"></a>UartSendBuf</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, progromflash.o(i.UartSendBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UartSendBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartSendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterProgromMode
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAck
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromSendFreqRange
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleProgromCmd
</UL>

<P><STRONG><a name="[1aa]"></a>UpdateMenuDisplay</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, displaymenu.o(i.UpdateMenuDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = UpdateMenuDisplay &rArr; DisplayStateBar &rArr; DisplayBattaryFlag &rArr; LCD_DisplayIcon &rArr; ST7735S_DisplayArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranStrToMiddle
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayStateBar
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
</UL>

<P><STRONG><a name="[ad]"></a>Usart_Init</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, board.o(i.Usart_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Usart_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[a1]"></a>UserADC_GetValOfBatt</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, board.o(i.UserADC_GetValOfBatt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UserADC_GetValOfBatt
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearFlag
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryGetLevel
</UL>

<P><STRONG><a name="[22a]"></a>UserADC_GetValOfVox</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, board.o(i.UserADC_GetValOfVox))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UserADC_GetValOfVox
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearFlag
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoxCheckTask
</UL>

<P><STRONG><a name="[ae]"></a>UserADC_Init</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, board.o(i.UserADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = UserADC_Init &rArr; ADC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationFactor
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_GetValOfBatt
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[cf]"></a>VfoFreqCalculate</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, radio.o(i.VfoFreqCalculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = VfoFreqCalculate &rArr; CheckFreqInRange &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreqInRange
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannleVfoDataInit
</UL>

<P><STRONG><a name="[1a6]"></a>VfoFreqDown</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, radio.o(i.VfoFreqDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = VfoFreqDown &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfClrMatchTimer
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxReset
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqSave
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_ReverseOff
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurWorkBand
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateVfoTxFreq
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyDownFun
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanNextChannel
</UL>

<P><STRONG><a name="[231]"></a>VfoFreqSave</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, radio.o(i.VfoFreqSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = VfoFreqSave &rArr; Flash_SaveVfoData &rArr; Flash_GetLogicAddrShift &rArr; SpiFlash_ReadBytes &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SaveVfoData
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFrequency2Buf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqUp
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqTypeIn
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqDown
</UL>

<P><STRONG><a name="[1a5]"></a>VfoFreqTypeIn</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, radio.o(i.VfoFreqTypeIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = VfoFreqTypeIn &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputVfoFreq
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfClrMatchTimer
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreqInRange
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxReset
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayNumInQueue
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqSave
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_ReverseOff
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateVfoTxFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyDigitalInput
</UL>

<P><STRONG><a name="[1a7]"></a>VfoFreqUp</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, radio.o(i.VfoFreqUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = VfoFreqUp &rArr; DisplayRadioHome &rArr; DisplayChannelMsg &rArr; DisplayCurFreq &rArr; LCD_DisplayNum12x17 &rArr; ST7735S_DisplayColorArea &rArr; ST7735S_SetRamAddr &rArr; WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayRadioHome
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfClrMatchTimer
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxReset
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqSave
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_ReverseOff
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurWorkBand
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateVfoTxFreq
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_KeyUpFun
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanNextChannel
</UL>

<P><STRONG><a name="[232]"></a>VfoFrequency2Buf</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, radio.o(i.VfoFrequency2Buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = VfoFrequency2Buf &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqSave
</UL>

<P><STRONG><a name="[d1]"></a>VfoOffsetCalculate</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, radio.o(i.VfoOffsetCalculate))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannleVfoDataInit
</UL>

<P><STRONG><a name="[125]"></a>VoiceBroadcastWithBeepLock</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, voicebroadcast.o(i.VoiceBroadcastWithBeepLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = VoiceBroadcastWithBeepLock &rArr; Audio_PlayVoiceLock &rArr; Audio_PlayTask &rArr; Audio_PlayStart &rArr; Rfic_RxTxOnOffSetup &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayVoiceLock
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFreqTypeIn
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanStart
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanOff
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterMode
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterWeatherMode
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitFmMode
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFmMode
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanStart
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanOff
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitWeatherMode
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_ScanQt
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChMemory
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChDelete
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveSelectItem
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_EnterNextLevel
</UL>

<P><STRONG><a name="[eb]"></a>VoiceOutput_Interrupt</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, voicebroadcast.o(i.VoiceOutput_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = VoiceOutput_Interrupt &rArr; DmaUpdateMemery
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DmaUpdateMemery
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1Int_Handler
</UL>

<P><STRONG><a name="[57]"></a>VoxCheckTask</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, functions.o(i.VoxCheckTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 4336<LI>Call Chain = VoxCheckTask &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_CheckBusy
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserADC_GetValOfVox
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_100msTask
</UL>

<P><STRONG><a name="[1d6]"></a>WaitPttRelease</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, radiotask.o(i.WaitPttRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = WaitPttRelease &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_On
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_TxSingleTone_Off
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_SetToneFreq
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_RxTxOnOffSetup
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeakerSwitch
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PTT_GetKeyVal
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_EnterTxMode
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TotTimeWarning
</UL>

<P><STRONG><a name="[19d]"></a>WeatherChannelDown</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, appweather.o(i.WeatherChannelDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = WeatherChannelDown &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherDisplayFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanNextChannel
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Weather
</UL>

<P><STRONG><a name="[19c]"></a>WeatherChannelUp</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, appweather.o(i.WeatherChannelUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = WeatherChannelUp &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepOut
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherDisplayFreq
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanNextChannel
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Weather
</UL>

<P><STRONG><a name="[233]"></a>WeatherDisplayFreq</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, displayweather.o(i.WeatherDisplayFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WeatherDisplayFreq &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherDisplayHome
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanOff
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherChannelUp
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherChannelDown
</UL>

<P><STRONG><a name="[139]"></a>WeatherDisplayHome</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, displayweather.o(i.WeatherDisplayHome))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WeatherDisplayHome &rArr; WeatherDisplayFreq &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherDisplayFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterWeatherMode
</UL>

<P><STRONG><a name="[1c7]"></a>WeatherInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, appweather.o(i.WeatherInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = WeatherInit &rArr; Rfic_ConfigRxMode &rArr; RF_PowerSet &rArr; Rfic_GpioSetBit &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_ConfigRxMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxTask
</UL>

<P><STRONG><a name="[19b]"></a>WeatherScanNextChannel</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, appweather.o(i.WeatherScanNextChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = WeatherScanNextChannel &rArr; WeatherChannelUp &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimeKeyLockAndPowerSave
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherChannelUp
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherChannelDown
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanTask
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Weather
</UL>

<P><STRONG><a name="[19e]"></a>WeatherScanOff</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, appweather.o(i.WeatherScanOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = WeatherScanOff &rArr; VoiceBroadcastWithBeepLock &rArr; Audio_PlayVoiceLock &rArr; Audio_PlayTask &rArr; Audio_PlayStart &rArr; Rfic_RxTxOnOffSetup &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherDisplayFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Weather
</UL>

<P><STRONG><a name="[19f]"></a>WeatherScanStart</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, appweather.o(i.WeatherScanStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = WeatherScanStart &rArr; VoiceBroadcastWithBeepLock &rArr; Audio_PlayVoiceLock &rArr; Audio_PlayTask &rArr; Audio_PlayStart &rArr; Rfic_RxTxOnOffSetup &rArr; Rfic_WriteWord &rArr; Rfic_ByteWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBroadcastWithBeepLock
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DualStandbyWorkOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Weather
</UL>

<P><STRONG><a name="[76]"></a>WeatherScanTask</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, appweather.o(i.WeatherScanTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = WeatherScanTask &rArr; WeatherScanNextChannel &rArr; WeatherChannelUp &rArr; BeepOut &rArr; Rfic_TxSingleTone_Off &rArr; Rfic_SetScramble &rArr; Rfic_ReadWord &rArr; GpioModeSwitch &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanNextChannel
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_GetSQLinkState
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_50msTask
</UL>

<P><STRONG><a name="[1f1]"></a>WriteWord</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, st7735s.o(i.WriteWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WriteWord &rArr; ST7735S_Data_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Data_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_SetRamAddr
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DrawVerticalLine
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DrawHorizonLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DisplayColorArea
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_DisplayArea
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_ClearArea
</UL>

<P><STRONG><a name="[234]"></a>__0sprintf$8</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[24d]"></a>__1sprintf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)

<P><STRONG><a name="[f1]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayFreq
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherDisplayFreq
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqModeDisplayStepMsg
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqModeDisplayDCSData
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QTScanDisplayStatus
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QTScanDisplayHome
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QTScanDisplay
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelNum
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VfoFrequency2Buf
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowInputChar
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChDelete
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OffectFrequency2Buf
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemPara
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterResetMode
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMenuDisplay
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemString
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCtcssDisBuf
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySelectHz
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputVfoScan
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputOffect
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputChFreq
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillChannelName2Buf
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCurFreq
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChannelMsg
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInputType
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySelectPy
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FmDisplayChNum
</UL>

<P><STRONG><a name="[62]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, appfm.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Main
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SideKey_Process
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Fm
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeatherScanTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_TxKeyTone
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_GetRealEvent
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_DtmfInput
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFreqTask
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Search
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanTask
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SaveSelectItem
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_KeyDigitalInput
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemPara
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemString
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[24e]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[24f]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[250]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[251]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[18f]"></a>checkInputCharMode</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, appmenu.o(i.checkInputCharMode))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess_Menu
</UL>

<P><STRONG><a name="[1ae]"></a>loadCtcssVal</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, appmenu.o(i.loadCtcssVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = loadCtcssVal
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_GetSubItemPara
</UL>

<P><STRONG><a name="[25]"></a>main</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 4456<LI>Call Chain = main &rArr; AppRunTask &rArr; KeyProcess_Search &rArr; FastEnterChMemMenu &rArr; Menu_EnterNextLevel &rArr; Menu_SaveSelectItem &rArr; EnterResetMode &rArr; App_10msTask &rArr; PTT_ScanTask &rArr; AlarmFuncSwitch &rArr; Radio_EnterTxMode &rArr; ExitAllFunction &rArr; Menu_ExitMode &rArr; Flash_SaveChannelData &rArr; Flash_ModifyChannelData &rArr; SpiFlash_WriteBytes &rArr; SpiFlash_WriteByte_InPage &rArr; SpiFlash_CheckBusy &rArr; SpiFlash_ReadStatus &rArr; SpiFlash_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInputBuf
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimeKeyLockAndPowerSave
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmTask
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BackLightSetOn
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_MemoryRemapConfig
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_DisplayPowerOn
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735S_Init
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfic_Init
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioVfoInfo_Init
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioConfig_Init
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromInit
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelCheckActiveAll
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepPowerOn
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryInitLevel
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_50msTask
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRunTask
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_500msTask
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_10msTask
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_100msTask
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[1a8]"></a>uartSendChar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, board.o(i.uartSendChar))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowInputChar
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartSendBuf
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgromSendAck
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[202]"></a>SetSysClock</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, system_bt32f0x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetSysClock &rArr; RCC_PLLConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLKConfig
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSICmd
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[132]"></a>NVIC_SystemReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, appmenu.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveChDelete
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterResetMode
</UL>

<P><STRONG><a name="[121]"></a>NVIC_SystemReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, progromflash.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterProgromMode
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterFlashProgromMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleProgromCmd
</UL>

<P><STRONG><a name="[174]"></a>KEY_ReadGpioInput</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, keyboard.o(i.KEY_ReadGpioInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KEY_ReadGpioInput
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputData
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyCode
</UL>

<P><STRONG><a name="[20e]"></a>CheckCtcssInList</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, displaymenu.o(i.CheckCtcssInList))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCtcssList
</UL>

<P><STRONG><a name="[1ab]"></a>ShowCtcssList</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, displaymenu.o(i.ShowCtcssList))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ShowCtcssList &rArr; GetCtcssDisBuf &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCtcssDisBuf
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCtcssInList
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
</UL>

<P><STRONG><a name="[91]"></a>DmaUpdateMemery</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, voicebroadcast.o(i.DmaUpdateMemery))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DmaUpdateMemery
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOutput_Interrupt
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_PlayStart
</UL>

<P><STRONG><a name="[235]"></a>_printf_core</STRONG> (Thumb, 1020 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>

<P><STRONG><a name="[237]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[236]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[28]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf8.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0sprintf$8)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
